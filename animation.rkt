#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 6.2.1 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 32 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 111 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 6 #"Menlo\0"
0 14 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 92 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 0 1 #"\0"
0 75 6 #"Menlo\0"
0.0 14 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 150 0 150 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 175 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 200 0 0 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 0 -1 -1 4 32 #"widget.rkt::browser-text% basic\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 59
#"macro-debugger/syntax-browser/properties color-text% basic\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 65 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 190 190 190
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 107 142 35 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 100 0 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 139 0 0 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 100 149 237
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 65 105 225 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 70 130 180 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 47 79 79 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 139 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 75 0 130 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 160 32 240 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 165 0 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 250 128 114
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 184 134 11 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 128 128 0 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 169 169 169
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
228 225 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 0 0 224
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 224
255 255 -1 -1 64 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 255 224
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 107 142 35
224 255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 100 0 224
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 169 169 169
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 139 0 0 224
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 70 130 180
224 255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 75 0 130 224
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 160 32 240
224 255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0
224 255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 250 128 114
224 255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 184 134 11
224 255 255 -1 -1 65 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 65 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 169 169 169
255 255 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 169 169 169
255 255 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 169 169 169
224 255 255 -1 -1 2 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 100 0 0 0
0 -1 -1 64 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 -1 1 #"\0"
0 13 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0 13 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1           0 6360 0 17 3 19 #";; Dylan Richardson"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 17 #"#| Project Report"
0 0 17 29 1 #"\n"
0 0 17 3 81
(
 #"  In order to run an animation you must execute \"(run-animation ani"
 #"mation-name)\"."
) 0 0 17 29 1 #"\n"
0 0 17 3 40 #"The example animations in this file are:"
0 0 17 29 1 #"\n"
0 0 17 3 53 #"ANIMATION1, ANIMATION2, ANIMATION3, CUSTOM - required"
0 0 17 29 1 #"\n"
0 0 17 3 81
(
 #"BOUNCE - demonstrates a bug in the program that I could not figure o"
 #"ut how to fix"
) 0 0 17 29 1 #"\n"
0 0 17 3 74
(
 #"  All of the required commands are fully functional in this program."
 #" Every"
) 0 0 17 29 1 #"\n"
0 0 17 3 75
(
 #"command that updates a graphic is able to take a list of graphics an"
 #"d apply"
) 0 0 17 29 1 #"\n"
0 0 17 3 76
(
 #"the operation to each element in the list. The graphic variable supp"
 #"orts all"
) 0 0 17 29 1 #"\n"
0 0 17 3 78
(
 #"kinds of images which includes circles and rectangles. The position,"
 #" velocity,"
) 0 0 17 29 1 #"\n"
0 0 17 3 80
(
 #"and acceleration (indirectly through the move command) of graphics a"
 #"re definable"
) 0 0 17 29 1 #"\n"
0 0 17 3 76
(
 #"by the programmer. Repetition and conditional commands are also avai"
 #"lable to"
) 0 0 17 29 1 #"\n"
0 0 17 3 11 #"programmer."
0 0 17 29 1 #"\n"
0 0 17 3 75
(
 #"  There were four changes made to the design of the language. The wi"
 #"dth and"
) 0 0 17 29 1 #"\n"
0 0 17 3 78
(
 #"height parameters for an animation were removed, because all of the "
 #"animations"
) 0 0 17 29 1 #"\n"
0 0 17 3 76
(
 #"are the same size so there is no need for this option. The second ch"
 #"ange was"
) 0 0 17 29 1 #"\n"
0 0 17 3 77
(
 #"adding an extra argument called \"shape\" to the graphic structure. "
 #"This change"
) 0 0 17 29 1 #"\n"
0 0 17 3 77
(
 #"was made to improve collision detection. Before, every object collid"
 #"ed like a"
) 0 0 17 29 1 #"\n"
0 0 17 3 78
(
 #"rectangle. This addition lets graphics with \"'circle\" as its shape"
 #" to detect a"
) 0 0 17 29 1 #"\n"
0 0 17 3 77
(
 #"collision and bounce like a circle. The next change made was adding "
 #"lower and"
) 0 0 17 29 1 #"\n"
0 0 17 3 80
(
 #"upper bound arguments to the jump command. I made this change becaus"
 #"e ANIMATION2"
) 0 0 17 29 1 #"\n"
0 0 17 3 76
(
 #"was ending too quickly. To rememdy this I made it so the purple circ"
 #"le would"
) 0 0 17 29 1 #"\n"
0 0 17 3 18 #"only jump between "
0 0 17 3 6 #"(50,50"
0 0 17 3 7 #") and ("
0 0 17 3 49 #"550,350) instead of (0,0) and (600,400). The last"
0 0 17 29 1 #"\n"
0 0 17 3 79
(
 #"change was limiting the bounce command to only accept two graphics a"
 #"s arguments"
) 0 0 17 29 1 #"\n"
0 0 17 3 73
(
 #"instead of two lists of graphics. It makes more sense to have two ob"
 #"jects"
) 0 0 17 29 1 #"\n"
0 0 17 3 79
(
 #"colliding and bouncing with each other than two lists of graphics al"
 #"l colliding"
) 0 0 17 29 1 #"\n"
0 0 17 3 17 #"at the same time."
0 0 17 29 1 #"\n"
0 0 17 3 75
(
 #"  The biggest problem I have with my language and interpreter is tha"
 #"t it is"
) 0 0 17 29 1 #"\n"
0 0 17 3 69
(
 #"somewhere between a linear, predictable animation and a physics base"
 #"d"
) 0 0 17 29 1 #"\n"
0 0 17 3 78
(
 #"simulation. Because of this, the program is very comlicated for an i"
 #"nterpreter"
) 0 0 17 29 1 #"\n"
0 0 17 3 76
(
 #"while it would have made more sense to have written the language in "
 #"an event"
) 0 0 17 29 1 #"\n"
0 0 17 3 79
(
 #"driven system. One poor deisgn decision was making most of the funct"
 #"ions in the"
) 0 0 17 29 1 #"\n"
0 0 17 3 77
(
 #"interpreter return void. This made it impossible to have test cases "
 #"for these"
) 0 0 17 29 1 #"\n"
0 0 17 3 79
(
 #"functions. Another problem that I have with my program is with the m"
 #"acros. Many"
) 0 0 17 29 1 #"\n"
0 0 17 3 79
(
 #"of the macros allow for the removal of parantheses around a list of "
 #"elements if"
) 0 0 17 29 1 #"\n"
0 0 17 3 76
(
 #"there is only one element in the list. This feature does not work if"
 #" the one"
) 0 0 17 29 1 #"\n"
0 0 17 3 79
(
 #"element is defined inline. For example, the code \"(Loop cmd1 Until "
 #"col1)\" works"
) 0 0 17 29 1 #"\n"
0 0 17 3 79
(
 #"fine, but if you try to replace col1 with its definition like \"(Loo"
 #"p cmd1 Until"
) 0 0 17 29 1 #"\n"
0 0 17 3 79
(
 #"(Collision obj1 obj2))\" an error is thrown because the macro matche"
 #"s Collision,"
) 0 0 17 29 1 #"\n"
0 0 17 3 80
(
 #"obj1, and obj2 to three different collisions. Lastly, if I had more "
 #"time I would"
) 0 0 17 29 1 #"\n"
0 0 17 3 81
(
 #"have liked to implement a macro called \"Simulation\" that takes a l"
 #"ist of graphics"
) 0 0 17 29 1 #"\n"
0 0 17 3 79
(
 #"and expands into an animation that moves and bounces each object acc"
 #"ordingly.|#"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 19 3 18 #"\"world-cs1102.rkt\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 22 #"test-engine/racket-gui"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 2 #" ("
0 0 14 3 10 #"for-syntax"
0 0 24 3 1 #" "
0 0 14 3 11 #"scheme/base"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 80
(
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; THE LANGUAGE ;;;;;;;;;;;;;;;;;;;;;;"
 #";;;;;;;;;;;;"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";; a program in this language is an animation"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 66
#";; an animation is (make-animation list-of-vargraphic list-of-cmd)"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 9 #"animation"
0 0 24 3 2 #" ("
0 0 14 3 7 #"objects"
0 0 24 3 1 #" "
0 0 14 3 4 #"cmds"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 26 #";; a list-of-cmd is either"
0 0 24 29 1 #"\n"
0 0 17 3 16 #";;   - empty, or"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";;   - (cons cmd list-of-cmd)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 18 #";; a cmd is either"
0 0 24 29 1 #"\n"
0 0 17 3 22 #";;   - cmd-loop-until,"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";;   - cmd-if,"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";;   - move,"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";;   - jump,"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";;   - insertion,"
0 0 24 29 1 #"\n"
0 0 17 3 15 #";;   - removal,"
0 0 24 29 1 #"\n"
0 0 17 3 16 #";;   - bounce,or"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";;   - graphic-change"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 79
(
 #";; a cmd-loop-until is (make-cmd-loop-until list-of-collision-cond l"
 #"ist-of-cmd)"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 14 #"cmd-loop-until"
0 0 24 3 2 #" ("
0 0 14 3 5 #"tests"
0 0 24 3 1 #" "
0 0 14 3 4 #"cmds"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 63
#";; a cmd-if is (make-cmd-if list-of-collision-cond list-of-cmd)"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 6 #"cmd-if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"tests"
0 0 24 3 1 #" "
0 0 14 3 4 #"cmds"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 57 #";; a graphic is (make-graphic image posn velocity symbol)"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";; shape can be 'circle or 'rectangle"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 7 #"graphic"
0 0 24 3 2 #" ("
0 0 14 3 3 #"pic"
0 0 24 3 1 #" "
0 0 14 3 3 #"pos"
0 0 24 3 1 #" "
0 0 14 3 3 #"vel"
0 0 24 3 1 #" "
0 0 14 3 5 #"shape"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 46 #";; a velocity is (make-velocity number number)"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 8 #"velocity"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 55 #";; an acceleration is (make-acceleration number number)"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 12 #"acceleration"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 51 #";; a vargraphic is (make-vargraphic graphic symbol)"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 10 #"vargraphic"
0 0 24 3 2 #" ("
0 0 14 3 6 #"object"
0 0 24 3 1 #" "
0 0 14 3 7 #"varname"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 74
(
 #";; a collision-cond is (make-collision-cond list-of-symbol list-of-s"
 #"ymbol)"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 14 #"collision-cond"
0 0 24 3 2 #" ("
0 0 14 3 8 #"objects1"
0 0 24 3 1 #" "
0 0 14 3 8 #"objects2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 79
(
 #";; a edge-collision-cond is (make-collision-cond list-of-symbol list"
 #"-of-symbol)"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 19 #"edge-collision-cond"
0 0 24 3 2 #" ("
0 0 14 3 7 #"objects"
0 0 24 3 1 #" "
0 0 14 3 5 #"sides"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 52 #";; a move is (make-move list-of-symbol acceleration)"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 4 #"move"
0 0 24 3 2 #" ("
0 0 14 3 7 #"objects"
0 0 24 3 1 #" "
0 0 14 3 5 #"accel"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 49 #";; a jump is (make-jump list-of-symbol posn posn)"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 4 #"jump"
0 0 24 3 2 #" ("
0 0 14 3 7 #"objects"
0 0 24 3 1 #" "
0 0 14 3 5 #"lower"
0 0 24 3 1 #" "
0 0 14 3 5 #"upper"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 54 #";; an insertion is (make-insertion list-of-vargraphic)"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 9 #"insertion"
0 0 24 3 2 #" ("
0 0 14 3 7 #"objects"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";; a removal is (make-removal list-of-symbol)"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 7 #"removal"
0 0 24 3 2 #" ("
0 0 14 3 7 #"objects"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 42 #";; a bounce is (make-bounce symbol symbol)"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 6 #"bounce"
0 0 24 3 2 #" ("
0 0 14 3 7 #"object1"
0 0 24 3 1 #" "
0 0 14 3 7 #"object2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 65
#";; a graphic-change is (make-graphic-change list-of-symbol value)"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 14 #"graphic-change"
0 0 24 3 2 #" ("
0 0 14 3 7 #"objects"
0 0 24 3 1 #" "
0 0 14 3 3 #"val"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";;;;;;;;;;; HELPERS ;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 44 #";; rand-velocity : number number -> velocity"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";; consumes two numbers"
0 0 24 29 1 #"\n"
0 0 17 3 68
#";; produces a random velocity with magnitude between the two numbers"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"rand-velocity"
0 0 24 3 1 #" "
0 0 14 3 5 #"lower"
0 0 24 3 1 #" "
0 0 14 3 5 #"upper"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" [("
0 0 14 3 1 #"x"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #" ("
0 0 14 3 6 #"random"
0 0 24 3 2 #") "
0 0 14 3 5 #"upper"
0 0 24 3 2 #") "
0 0 14 3 5 #"upper"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 1 #"y"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 6 #"random"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 4 #"sqrt"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 5 #"upper"
0 0 24 3 1 #" "
0 0 14 3 5 #"upper"
0 0 24 3 3 #") ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 4 #"sqrt"
0 0 24 3 2 #" ("
0 0 14 3 3 #"max"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 5 #"lower"
0 0 24 3 1 #" "
0 0 14 3 5 #"lower"
0 0 24 3 3 #") ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 4 #"sqrt"
0 0 24 3 2 #" ("
0 0 14 3 3 #"max"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 5 #"lower"
0 0 24 3 1 #" "
0 0 14 3 5 #"lower"
0 0 24 3 3 #") ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 7 #"))))))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 13 #"make-velocity"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";;;;;;;;;;; MACROS ;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 67
#";; Wraps local around the definitions, makes vargraphics out of the"
0 0 24 29 1 #"\n"
0 0 17 3 66
#";;   variables, and wraps list around the vargraphics and commands"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-syntax"
0 0 24 3 1 #" "
0 0 14 3 9 #"Animation"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 12 #"syntax-rules"
0 0 24 3 2 #" ("
0 0 14 3 9 #"Variables"
0 0 24 3 1 #" "
0 0 14 3 8 #"Commands"
0 0 24 3 1 #" "
0 0 14 3 11 #"Definitions"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 1 #"="
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 9 #"Animation"
0 0 24 3 1 #" "
0 0 14 3 11 #"Definitions"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 3 #" [("
0 0 14 3 5 #"name1"
0 0 24 3 1 #" "
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 4 #"val1"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 2 #"] "
0 0 14 3 9 #"Variables"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 3 #" [("
0 0 14 3 5 #"name2"
0 0 24 3 1 #" "
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 4 #"val2"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 2 #"] "
0 0 14 3 8 #"Commands"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 2 #" ["
0 0 14 3 4 #"cmd1"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 5 #"local"
0 0 24 3 3 #" [("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"name1"
0 0 24 3 1 #" "
0 0 14 3 4 #"val1"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 3 #"] ("
0 0 14 3 14 #"make-animation"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 3 #"Var"
0 0 24 3 1 #" "
0 0 14 3 5 #"name2"
0 0 24 3 1 #" "
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 4 #"val2"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 4 #"cmd1"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 9 #"Animation"
0 0 24 3 1 #" "
0 0 14 3 11 #"Definitions"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 3 #" [("
0 0 14 3 5 #"name1"
0 0 24 3 1 #" "
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 4 #"val1"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 2 #"] "
0 0 14 3 8 #"Commands"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 2 #" ["
0 0 14 3 4 #"cmd1"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 2 #"] "
0 0 14 3 9 #"Variables"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 3 #" [("
0 0 14 3 5 #"name2"
0 0 24 3 1 #" "
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 4 #"val2"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 5 #"local"
0 0 24 3 3 #" [("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"name1"
0 0 24 3 1 #" "
0 0 14 3 4 #"val1"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 3 #"] ("
0 0 14 3 14 #"make-animation"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 3 #"Var"
0 0 24 3 1 #" "
0 0 14 3 5 #"name2"
0 0 24 3 1 #" "
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 4 #"val2"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 4 #"cmd1"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 9 #"Animation"
0 0 24 3 1 #" "
0 0 14 3 9 #"Variables"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 3 #" [("
0 0 14 3 5 #"name2"
0 0 24 3 1 #" "
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 4 #"val2"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 2 #"] "
0 0 14 3 11 #"Definitions"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 3 #" [("
0 0 14 3 5 #"name1"
0 0 24 3 1 #" "
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 4 #"val1"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 2 #"] "
0 0 14 3 8 #"Commands"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 2 #" ["
0 0 14 3 4 #"cmd1"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 5 #"local"
0 0 24 3 3 #" [("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"name1"
0 0 24 3 1 #" "
0 0 14 3 4 #"val1"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 3 #"] ("
0 0 14 3 14 #"make-animation"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 3 #"Var"
0 0 24 3 1 #" "
0 0 14 3 5 #"name2"
0 0 24 3 1 #" "
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 4 #"val2"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 4 #"cmd1"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 9 #"Animation"
0 0 24 3 1 #" "
0 0 14 3 9 #"Variables"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 3 #" [("
0 0 14 3 5 #"name2"
0 0 24 3 1 #" "
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 4 #"val2"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 2 #"] "
0 0 14 3 8 #"Commands"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 2 #" ["
0 0 14 3 4 #"cmd1"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 2 #"] "
0 0 14 3 11 #"Definitions"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 3 #" [("
0 0 14 3 5 #"name1"
0 0 24 3 1 #" "
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 4 #"val1"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 5 #"local"
0 0 24 3 3 #" [("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"name1"
0 0 24 3 1 #" "
0 0 14 3 4 #"val1"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 3 #"] ("
0 0 14 3 14 #"make-animation"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 3 #"Var"
0 0 24 3 1 #" "
0 0 14 3 5 #"name2"
0 0 24 3 1 #" "
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 4 #"val2"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 4 #"cmd1"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 9 #"Animation"
0 0 24 3 1 #" "
0 0 14 3 8 #"Commands"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 2 #" ["
0 0 14 3 4 #"cmd1"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 2 #"] "
0 0 14 3 11 #"Definitions"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 3 #" [("
0 0 14 3 5 #"name1"
0 0 24 3 1 #" "
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 4 #"val1"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 2 #"] "
0 0 14 3 9 #"Variables"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 3 #" [("
0 0 14 3 5 #"name2"
0 0 24 3 1 #" "
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 4 #"val2"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 5 #"local"
0 0 24 3 3 #" [("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"name1"
0 0 24 3 1 #" "
0 0 14 3 4 #"val1"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 3 #"] ("
0 0 14 3 14 #"make-animation"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 3 #"Var"
0 0 24 3 1 #" "
0 0 14 3 5 #"name2"
0 0 24 3 1 #" "
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 4 #"val2"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 4 #"cmd1"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 9 #"Animation"
0 0 24 3 1 #" "
0 0 14 3 8 #"Commands"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 2 #" ["
0 0 14 3 4 #"cmd1"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 2 #"] "
0 0 14 3 9 #"Variables"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 3 #" [("
0 0 14 3 5 #"name2"
0 0 24 3 1 #" "
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 4 #"val2"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 2 #"] "
0 0 14 3 11 #"Definitions"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 3 #" [("
0 0 14 3 5 #"name1"
0 0 24 3 1 #" "
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 4 #"val1"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 5 #"local"
0 0 24 3 3 #" [("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"name1"
0 0 24 3 1 #" "
0 0 14 3 4 #"val1"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 3 #"] ("
0 0 14 3 14 #"make-animation"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 3 #"Var"
0 0 24 3 1 #" "
0 0 14 3 5 #"name2"
0 0 24 3 1 #" "
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 4 #"val2"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 4 #"cmd1"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 9 #"Animation"
0 0 24 3 1 #" "
0 0 14 3 9 #"Variables"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 3 #" [("
0 0 14 3 5 #"name2"
0 0 24 3 1 #" "
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 4 #"val2"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 2 #"] "
0 0 14 3 8 #"Commands"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 2 #" ["
0 0 14 3 4 #"cmd1"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 14 #"make-animation"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 3 #"Var"
0 0 24 3 1 #" "
0 0 14 3 5 #"name2"
0 0 24 3 1 #" "
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 4 #"val2"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 4 #"cmd1"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 9 #"Animation"
0 0 24 3 1 #" "
0 0 14 3 8 #"Commands"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 2 #" ["
0 0 14 3 4 #"cmd1"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 2 #"] "
0 0 14 3 9 #"Variables"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 3 #" [("
0 0 14 3 5 #"name2"
0 0 24 3 1 #" "
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 4 #"val2"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 14 #"make-animation"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 3 #"Var"
0 0 24 3 1 #" "
0 0 14 3 5 #"name2"
0 0 24 3 1 #" "
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 4 #"val2"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 4 #"cmd1"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 42 #";; Avoids language structures (\"make-...\")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-syntax"
0 0 24 3 1 #" "
0 0 14 3 10 #"Vargraphic"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 12 #"syntax-rules"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 10 #"Vargraphic"
0 0 24 3 1 #" "
0 0 14 3 5 #"image"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 3 #") ("
0 0 14 3 2 #"vx"
0 0 24 3 1 #" "
0 0 14 3 2 #"vy"
0 0 24 3 2 #") "
0 0 14 3 5 #"shape"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 15 #"make-vargraphic"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 12 #"make-graphic"
0 0 24 3 1 #" "
0 0 14 3 5 #"image"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 13 #"make-velocity"
0 0 24 3 1 #" "
0 0 14 3 2 #"vx"
0 0 24 3 1 #" "
0 0 14 3 2 #"vy"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                    "
0 0 21 3 1 #"'"
0 0 14 3 5 #"shape"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 4 #"name"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 10 #"Vargraphic"
0 0 24 3 1 #" "
0 0 14 3 5 #"image"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 3 #") ("
0 0 14 3 14 #"RandomVelocity"
0 0 24 3 1 #" "
0 0 14 3 5 #"lower"
0 0 24 3 1 #" "
0 0 14 3 5 #"upper"
0 0 24 3 2 #") "
0 0 14 3 5 #"shape"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 1 #">"
0 0 24 3 1 #" "
0 0 14 3 5 #"lower"
0 0 24 3 1 #" "
0 0 14 3 5 #"upper"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 5 #"error"
0 0 24 3 2 #" ("
0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 5 #"Lower"
0 0 19 3 1 #" "
0 0 19 3 9 #"magnitude"
0 0 19 3 32 #" is greater than upper: ~a > ~a\""
0 0 24 3 1 #" "
0 0 14 3 5 #"lower"
0 0 24 3 1 #" "
0 0 14 3 5 #"upper"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"           [("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 5 #"lower"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 5 #"error"
0 0 24 3 2 #" ("
0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 38 #"Lower magnitude is less than zero: ~a\""
0 0 24 3 1 #" "
0 0 14 3 5 #"lower"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"           [("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 5 #"upper"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 5 #"error"
0 0 24 3 2 #" ("
0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 38 #"Upper magnitude is less than zero: ~a\""
0 0 24 3 1 #" "
0 0 14 3 5 #"upper"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 15 #"make-vargraphic"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 12 #"make-graphic"
0 0 24 3 1 #" "
0 0 14 3 5 #"image"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                ("
0 0 14 3 14 #"RandomVelocity"
0 0 24 3 1 #" "
0 0 14 3 5 #"lower"
0 0 24 3 1 #" "
0 0 14 3 5 #"upper"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                                "
0 0 21 3 1 #"'"
0 0 14 3 5 #"shape"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 4 #"name"
0 0 24 3 6 #")])]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";; Error checks random-velocity function"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-syntax"
0 0 24 3 1 #" "
0 0 14 3 14 #"RandomVelocity"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 12 #"syntax-rules"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 14 #"RandomVelocity"
0 0 24 3 1 #" "
0 0 14 3 5 #"lower"
0 0 24 3 1 #" "
0 0 14 3 5 #"upper"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 1 #">"
0 0 24 3 1 #" "
0 0 14 3 5 #"lower"
0 0 24 3 1 #" "
0 0 14 3 5 #"upper"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 5 #"error"
0 0 24 3 2 #" ("
0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 5 #"Lower"
0 0 19 3 1 #" "
0 0 19 3 41 #"magnitude is greater than upper: ~a > ~a\""
0 0 24 3 1 #" "
0 0 14 3 5 #"lower"
0 0 24 3 1 #" "
0 0 14 3 5 #"upper"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"           [("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 5 #"lower"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 5 #"error"
0 0 24 3 2 #" ("
0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 39 #"\"Lower magnitude is less than zero: ~a\""
0 0 24 3 1 #" "
0 0 14 3 5 #"lower"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"           [("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 5 #"upper"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 5 #"error"
0 0 24 3 2 #" ("
0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 39 #"\"Upper magnitude is less than zero: ~a\""
0 0 24 3 1 #" "
0 0 14 3 5 #"upper"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 13 #"rand-velocity"
0 0 24 3 1 #" "
0 0 14 3 5 #"lower"
0 0 24 3 1 #" "
0 0 14 3 5 #"upper"
0 0 24 3 6 #")])]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 66
#";; Implicitly defines the shape of a vargraphic based on the image"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-syntax"
0 0 24 3 1 #" "
0 0 14 3 3 #"Var"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 12 #"syntax-rules"
0 0 24 3 2 #" ("
0 0 14 3 6 #"Circle"
0 0 24 3 1 #" "
0 0 14 3 9 #"Rectangle"
0 0 24 3 1 #" "
0 0 14 3 1 #"="
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 3 #"Var"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 1 #" "
0 0 14 3 1 #"="
0 0 24 3 3 #" (("
0 0 14 3 6 #"Circle"
0 0 24 3 1 #" "
0 0 14 3 6 #"radius"
0 0 24 3 1 #" "
0 0 14 3 5 #"color"
0 0 24 3 2 #") "
0 0 14 3 3 #"pos"
0 0 24 3 1 #" "
0 0 14 3 3 #"vel"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 10 #"Vargraphic"
0 0 24 3 2 #" ("
0 0 14 3 6 #"Circle"
0 0 24 3 1 #" "
0 0 14 3 6 #"radius"
0 0 24 3 1 #" "
0 0 14 3 5 #"color"
0 0 24 3 2 #") "
0 0 14 3 3 #"pos"
0 0 24 3 1 #" "
0 0 14 3 3 #"vel"
0 0 24 3 1 #" "
0 0 14 3 6 #"circle"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 3 #"Var"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 1 #" "
0 0 14 3 1 #"="
0 0 24 3 3 #" (("
0 0 14 3 9 #"Rectangle"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #" "
0 0 14 3 1 #"h"
0 0 24 3 1 #" "
0 0 14 3 5 #"color"
0 0 24 3 2 #") "
0 0 14 3 3 #"pos"
0 0 24 3 1 #" "
0 0 14 3 3 #"vel"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 10 #"Vargraphic"
0 0 24 3 2 #" ("
0 0 14 3 9 #"Rectangle"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #" "
0 0 14 3 1 #"h"
0 0 24 3 1 #" "
0 0 14 3 5 #"color"
0 0 24 3 2 #") "
0 0 14 3 3 #"pos"
0 0 24 3 1 #" "
0 0 14 3 3 #"vel"
0 0 24 3 1 #" "
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 3 #"Var"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 1 #" "
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 5 #"image"
0 0 24 3 1 #" "
0 0 14 3 3 #"pos"
0 0 24 3 1 #" "
0 0 14 3 3 #"vel"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 10 #"Vargraphic"
0 0 24 3 1 #" "
0 0 14 3 5 #"image"
0 0 24 3 1 #" "
0 0 14 3 3 #"pos"
0 0 24 3 1 #" "
0 0 14 3 3 #"vel"
0 0 24 3 1 #" "
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 3 #"Var"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 1 #" "
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 5 #"image"
0 0 24 3 1 #" "
0 0 14 3 3 #"pos"
0 0 24 3 1 #" "
0 0 14 3 3 #"vel"
0 0 24 3 1 #" "
0 0 14 3 5 #"shape"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 10 #"Vargraphic"
0 0 24 3 1 #" "
0 0 14 3 5 #"image"
0 0 24 3 1 #" "
0 0 14 3 3 #"pos"
0 0 24 3 1 #" "
0 0 14 3 3 #"vel"
0 0 24 3 1 #" "
0 0 14 3 5 #"shape"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 62
#";; Error checks the circle function and removes the mode field"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-syntax"
0 0 24 3 1 #" "
0 0 14 3 6 #"Circle"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 12 #"syntax-rules"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"Circle"
0 0 24 3 1 #" "
0 0 14 3 6 #"radius"
0 0 24 3 1 #" "
0 0 14 3 5 #"color"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 6 #"radius"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 5 #"error"
0 0 24 3 2 #" ("
0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 40 #"\"Circle radius must be non-negative: ~a\""
0 0 24 3 1 #" "
0 0 14 3 6 #"radius"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"           [("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 7 #"symbol?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"color"
0 0 24 3 4 #")) ("
0 0 14 3 5 #"error"
0 0 24 3 2 #" ("
0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 34 #"\"Circle color must be a symbol ~a\""
0 0 24 3 1 #" "
0 0 14 3 5 #"color"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 6 #"circle"
0 0 24 3 1 #" "
0 0 14 3 6 #"radius"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"color"
0 0 24 3 6 #")])]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 65
#";; Error checks the rectangle function and removes the mode field"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-syntax"
0 0 24 3 1 #" "
0 0 14 3 9 #"Rectangle"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 12 #"syntax-rules"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 9 #"Rectangle"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #" "
0 0 14 3 1 #"h"
0 0 24 3 1 #" "
0 0 14 3 5 #"color"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 5 #"error"
0 0 24 3 2 #" ("
0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 42 #"\"Rectangle width must be non-negative: ~a\""
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"           [("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 1 #"h"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 5 #"error"
0 0 24 3 2 #" ("
0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 43 #"\"Rectangle height must be non-negative: ~a\""
0 0 24 3 1 #" "
0 0 14 3 1 #"h"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"           [("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 7 #"symbol?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"color"
0 0 24 3 4 #")) ("
0 0 14 3 5 #"error"
0 0 24 3 2 #" ("
0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 37 #"\"Rectangle color must be a symbol ~a\""
0 0 24 3 1 #" "
0 0 14 3 5 #"color"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #" "
0 0 14 3 1 #"h"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"color"
0 0 24 3 6 #")])]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 65
#";; Creates a vargraphic that represents the top edge of the frame"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-syntax"
0 0 24 3 1 #" "
0 0 14 3 7 #"TopEdge"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 12 #"syntax-rules"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 7 #"TopEdge"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 10 #"Vargraphic"
0 0 24 3 2 #" ("
0 0 14 3 9 #"Rectangle"
0 0 24 3 1 #" "
0 0 21 3 3 #"800"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 14 3 5 #"white"
0 0 24 3 3 #") ("
0 0 21 3 3 #"300"
0 0 24 3 1 #" "
0 0 21 3 3 #"-50"
0 0 24 3 3 #") ("
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 7 #"TopEdge"
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 68
#";; Creates a vargraphic that represents the bottom edge of the frame"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-syntax"
0 0 24 3 1 #" "
0 0 14 3 10 #"BottomEdge"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 12 #"syntax-rules"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 10 #"BottomEdge"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 10 #"Vargraphic"
0 0 24 3 2 #" ("
0 0 14 3 9 #"Rectangle"
0 0 24 3 1 #" "
0 0 21 3 3 #"800"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 14 3 5 #"white"
0 0 24 3 3 #") ("
0 0 21 3 3 #"300"
0 0 24 3 1 #" "
0 0 21 3 3 #"450"
0 0 24 3 3 #") ("
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 10 #"BottomEdge"
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 66
#";; Creates a vargraphic that represents the left edge of the frame"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-syntax"
0 0 24 3 1 #" "
0 0 14 3 8 #"LeftEdge"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 12 #"syntax-rules"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"LeftEdge"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 10 #"Vargraphic"
0 0 24 3 2 #" ("
0 0 14 3 9 #"Rectangle"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"600"
0 0 24 3 1 #" "
0 0 14 3 5 #"white"
0 0 24 3 3 #") ("
0 0 21 3 3 #"-50"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 3 #") ("
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 8 #"LeftEdge"
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 67
#";; Creates a vargraphic that represents the right edge of the frame"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-syntax"
0 0 24 3 1 #" "
0 0 14 3 9 #"RightEdge"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 12 #"syntax-rules"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 9 #"RightEdge"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 10 #"Vargraphic"
0 0 24 3 2 #" ("
0 0 14 3 9 #"Rectangle"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"600"
0 0 24 3 1 #" "
0 0 14 3 5 #"white"
0 0 24 3 3 #") ("
0 0 21 3 3 #"650"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 3 #") ("
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 9 #"RightEdge"
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 67
#";; Wraps list around the objects and sets the acceleration to (0,0)"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-syntax"
0 0 24 3 1 #" "
0 0 14 3 4 #"Move"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 12 #"syntax-rules"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 4 #"Move"
0 0 24 3 1 #" "
0 0 14 3 4 #"obj1"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 9 #"make-move"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"obj1"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 3 #") ("
0 0 14 3 17 #"make-acceleration"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 69
(
 #";; Wraps list around the objects and sets the acceleration to (ax,ay"
 #")"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-syntax"
0 0 24 3 1 #" "
0 0 14 3 5 #"Accel"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 12 #"syntax-rules"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 5 #"Accel"
0 0 24 3 2 #" ("
0 0 14 3 2 #"ax"
0 0 24 3 1 #" "
0 0 14 3 2 #"ay"
0 0 24 3 2 #") "
0 0 14 3 4 #"obj1"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 9 #"make-move"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"obj1"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 3 #") ("
0 0 14 3 17 #"make-acceleration"
0 0 24 3 1 #" "
0 0 14 3 2 #"ax"
0 0 24 3 1 #" "
0 0 14 3 2 #"ay"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 77
(
 #";; Wraps list around the objects and sets the lower and upper bounds"
 #" to (0,0)"
) 0 0 24 29 1 #"\n"
0 0 17 3 42 #";;   and (600 400) or the points specified"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-syntax"
0 0 24 3 1 #" "
0 0 14 3 4 #"Jump"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 12 #"syntax-rules"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 4 #"Jump"
0 0 24 3 2 #" ("
0 0 14 3 2 #"x1"
0 0 24 3 1 #" "
0 0 14 3 2 #"y1"
0 0 24 3 3 #") ("
0 0 14 3 2 #"x2"
0 0 24 3 1 #" "
0 0 14 3 2 #"y2"
0 0 24 3 2 #") "
0 0 14 3 4 #"obj1"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 9 #"make-jump"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"obj1"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 14 3 2 #"x1"
0 0 24 3 1 #" "
0 0 14 3 2 #"y1"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 14 3 2 #"x2"
0 0 24 3 1 #" "
0 0 14 3 2 #"y2"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 4 #"Jump"
0 0 24 3 1 #" "
0 0 14 3 4 #"obj1"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 9 #"make-jump"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"obj1"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"600"
0 0 24 3 1 #" "
0 0 21 3 3 #"400"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 69
(
 #";; Adds quotes to the objects and the syntax follows the other macro"
 #"s"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-syntax"
0 0 24 3 1 #" "
0 0 14 3 6 #"Bounce"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 12 #"syntax-rules"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"Bounce"
0 0 24 3 1 #" "
0 0 14 3 4 #"obj1"
0 0 24 3 1 #" "
0 0 14 3 4 #"obj2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 11 #"make-bounce"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"obj1"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"obj2"
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";; Wraps list around the objects"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-syntax"
0 0 24 3 1 #" "
0 0 14 3 6 #"Insert"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 12 #"syntax-rules"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"Insert"
0 0 24 3 1 #" "
0 0 14 3 4 #"obj1"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 14 #"make-insertion"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 4 #"obj1"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";; Wraps list around the objects"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-syntax"
0 0 24 3 1 #" "
0 0 14 3 6 #"Remove"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 12 #"syntax-rules"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"Remove"
0 0 24 3 1 #" "
0 0 14 3 4 #"obj1"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 12 #"make-removal"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"obj1"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 61
#";; Wraps list around the names and avoids language structures"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-syntax"
0 0 24 3 1 #" "
0 0 14 3 6 #"Change"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 12 #"syntax-rules"
0 0 24 3 2 #" ("
0 0 14 3 8 #"velocity"
0 0 24 3 1 #" "
0 0 14 3 8 #"position"
0 0 24 3 1 #" "
0 0 14 3 5 #"image"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"Change"
0 0 24 3 1 #" "
0 0 14 3 8 #"velocity"
0 0 24 3 2 #" ("
0 0 14 3 2 #"vx"
0 0 24 3 1 #" "
0 0 14 3 2 #"vy"
0 0 24 3 2 #") "
0 0 14 3 5 #"name1"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 19 #"make-graphic-change"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"name1"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 3 #") ("
0 0 14 3 13 #"make-velocity"
0 0 24 3 1 #" "
0 0 14 3 2 #"vx"
0 0 24 3 1 #" "
0 0 14 3 2 #"vy"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"Change"
0 0 24 3 1 #" "
0 0 14 3 8 #"position"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 2 #") "
0 0 14 3 5 #"name1"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 19 #"make-graphic-change"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"name1"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"Change"
0 0 24 3 1 #" "
0 0 14 3 5 #"image"
0 0 24 3 1 #" "
0 0 14 3 3 #"pic"
0 0 24 3 1 #" "
0 0 14 3 5 #"name1"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 19 #"make-graphic-change"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"name1"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 2 #") "
0 0 14 3 3 #"pic"
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 75
(
 #";; Wraps lists around the objects and allows for the removal of pare"
 #"ntheses"
) 0 0 24 29 1 #"\n"
0 0 17 3 32 #";;   around a list of one object"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-syntax"
0 0 24 3 1 #" "
0 0 14 3 9 #"Collision"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 12 #"syntax-rules"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 9 #"Collision"
0 0 24 3 2 #" ("
0 0 14 3 4 #"obj1"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 3 #") ("
0 0 14 3 4 #"obj2"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 19 #"make-collision-cond"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"obj1"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"obj2"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 9 #"Collision"
0 0 24 3 2 #" ("
0 0 14 3 4 #"obj1"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 2 #") "
0 0 14 3 4 #"obj2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 19 #"make-collision-cond"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"obj1"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"obj2"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 9 #"Collision"
0 0 24 3 1 #" "
0 0 14 3 4 #"obj1"
0 0 24 3 2 #" ("
0 0 14 3 4 #"obj2"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 19 #"make-collision-cond"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"obj1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"obj2"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 9 #"Collision"
0 0 24 3 1 #" "
0 0 14 3 4 #"obj1"
0 0 24 3 1 #" "
0 0 14 3 4 #"obj2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 19 #"make-collision-cond"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"obj1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"obj2"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 75
(
 #";; Wraps lists around the objects and allows for the removal of pare"
 #"ntheses"
) 0 0 24 29 1 #"\n"
0 0 17 3 32 #";;   around a list of one object"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-syntax"
0 0 24 3 1 #" "
0 0 14 3 13 #"EdgeCollision"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 12 #"syntax-rules"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 13 #"EdgeCollision"
0 0 24 3 2 #" ("
0 0 14 3 4 #"obj1"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 3 #") ("
0 0 14 3 5 #"side1"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 14 #"EdgeCollisionl"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"obj1"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"side1"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 13 #"EdgeCollision"
0 0 24 3 2 #" ("
0 0 14 3 4 #"obj1"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 2 #") "
0 0 14 3 5 #"side1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 14 #"EdgeCollisionl"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"obj1"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"side1"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 13 #"EdgeCollision"
0 0 24 3 1 #" "
0 0 14 3 4 #"obj1"
0 0 24 3 2 #" ("
0 0 14 3 5 #"side1"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 14 #"EdgeCollisionl"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"obj1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"side1"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 13 #"EdgeCollision"
0 0 24 3 1 #" "
0 0 14 3 4 #"obj1"
0 0 24 3 1 #" "
0 0 14 3 5 #"side1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 14 #"EdgeCollisionl"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"obj1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"side1"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";; Error checks the sides"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-syntax"
0 0 24 3 1 #" "
0 0 14 3 14 #"EdgeCollisionl"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 12 #"syntax-rules"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 14 #"EdgeCollisionl"
0 0 24 3 1 #" "
0 0 14 3 4 #"objs"
0 0 24 3 1 #" "
0 0 14 3 5 #"sides"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 8 #"for-each"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 4 #"side"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"member"
0 0 24 3 1 #" "
0 0 14 3 4 #"side"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"top"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"bottom"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"right"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"any"
0 0 24 3 3 #")) "
0 0 14 3 4 #"true"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 5 #"error"
0 0 24 3 2 #" ("
0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 25 #"\"Edge does not exist: ~a\""
0 0 24 3 1 #" "
0 0 14 3 4 #"side"
0 0 24 3 5 #")))) "
0 0 14 3 5 #"sides"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 6 #"member"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"any"
0 0 24 3 1 #" "
0 0 14 3 5 #"sides"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 24 #"make-edge-collision-cond"
0 0 24 3 1 #" "
0 0 14 3 4 #"objs"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"top"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"bottom"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"right"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 24 #"make-edge-collision-cond"
0 0 24 3 1 #" "
0 0 14 3 4 #"objs"
0 0 24 3 1 #" "
0 0 14 3 5 #"sides"
0 0 24 3 7 #")]))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 75
(
 #";; Wraps lists around the objects and allows for the removal of pare"
 #"ntheses"
) 0 0 24 29 1 #"\n"
0 0 17 3 32 #";;   around a list of one object"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-syntax"
0 0 24 3 1 #" "
0 0 14 3 4 #"Loop"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 12 #"syntax-rules"
0 0 24 3 2 #" ("
0 0 14 3 5 #"Until"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 4 #"Loop"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cmd1"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 2 #") "
0 0 14 3 5 #"Until"
0 0 24 3 2 #" ("
0 0 14 3 4 #"col1"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 19 #"make-cmd-loop-until"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 4 #"col1"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 4 #"cmd1"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 4 #"Loop"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cmd1"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 2 #") "
0 0 14 3 5 #"Until"
0 0 24 3 1 #" "
0 0 14 3 4 #"col1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 19 #"make-cmd-loop-until"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 4 #"col1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 4 #"cmd1"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 4 #"Loop"
0 0 24 3 1 #" "
0 0 14 3 4 #"cmd1"
0 0 24 3 1 #" "
0 0 14 3 5 #"Until"
0 0 24 3 2 #" ("
0 0 14 3 4 #"col1"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 19 #"make-cmd-loop-until"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 4 #"col1"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 4 #"cmd1"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 4 #"Loop"
0 0 24 3 1 #" "
0 0 14 3 4 #"cmd1"
0 0 24 3 1 #" "
0 0 14 3 5 #"Until"
0 0 24 3 1 #" "
0 0 14 3 4 #"col1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 19 #"make-cmd-loop-until"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 4 #"col1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 4 #"cmd1"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 75
(
 #";; Wraps lists around the objects and allows for the removal of pare"
 #"ntheses"
) 0 0 24 29 1 #"\n"
0 0 17 3 32 #";;   around a list of one object"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-syntax"
0 0 24 3 1 #" "
0 0 14 3 2 #"If"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 12 #"syntax-rules"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 2 #"If"
0 0 24 3 2 #" ("
0 0 14 3 4 #"col1"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 3 #") ("
0 0 14 3 4 #"cmd1"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 11 #"make-cmd-if"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 4 #"col1"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 4 #"cmd1"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 2 #"If"
0 0 24 3 2 #" ("
0 0 14 3 4 #"col1"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 2 #") "
0 0 14 3 4 #"cmd1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 11 #"make-cmd-if"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 4 #"col1"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 4 #"cmd1"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 2 #"If"
0 0 24 3 1 #" "
0 0 14 3 4 #"col1"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cmd1"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 11 #"make-cmd-if"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 4 #"col1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 4 #"cmd1"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 2 #"If"
0 0 24 3 1 #" "
0 0 14 3 4 #"col1"
0 0 24 3 1 #" "
0 0 14 3 4 #"cmd1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 11 #"make-cmd-if"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 4 #"col1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 4 #"cmd1"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 80
(
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; EXAMPLES ;;;;;;;;;;;;;;;;;;;;;;;;"
 #";;;;;;;;;;;;"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"ANIMATION1"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 9 #"Animation"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 11 #"Definitions"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 3 #" [("
0 0 14 3 13 #"redCircleMove"
0 0 24 3 1 #" "
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 4 #"Move"
0 0 24 3 1 #" "
0 0 14 3 9 #"redCircle"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 9 #"Variables"
0 0 24 3 3 #"   "
0 0 14 3 1 #":"
0 0 24 3 3 #" [("
0 0 14 3 9 #"redCircle"
0 0 24 3 1 #" "
0 0 14 3 1 #"="
0 0 24 3 3 #" (("
0 0 14 3 6 #"Circle"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 1 #" "
0 0 14 3 3 #"red"
0 0 24 3 3 #") ("
0 0 21 3 3 #"120"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 3 #") ("
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 13 #"blueRectangle"
0 0 24 3 1 #" "
0 0 14 3 1 #"="
0 0 24 3 3 #" (("
0 0 14 3 9 #"Rectangle"
0 0 24 3 1 #" "
0 0 21 3 2 #"60"
0 0 24 3 1 #" "
0 0 21 3 3 #"320"
0 0 24 3 1 #" "
0 0 14 3 4 #"blue"
0 0 24 3 3 #") ("
0 0 21 3 3 #"480"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 3 #") ("
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 8 #"Commands"
0 0 24 3 4 #"    "
0 0 14 3 1 #":"
0 0 24 3 3 #" [("
0 0 14 3 4 #"Loop"
0 0 24 3 1 #" "
0 0 14 3 13 #"redCircleMove"
0 0 24 3 1 #" "
0 0 14 3 5 #"Until"
0 0 24 3 3 #" (("
0 0 14 3 9 #"Collision"
0 0 24 3 1 #" "
0 0 14 3 9 #"redCircle"
0 0 24 3 1 #" "
0 0 14 3 13 #"blueRectangle"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 6 #"Bounce"
0 0 24 3 1 #" "
0 0 14 3 9 #"redCircle"
0 0 24 3 1 #" "
0 0 14 3 13 #"blueRectangle"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 6 #"Remove"
0 0 24 3 1 #" "
0 0 14 3 13 #"blueRectangle"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 4 #"Loop"
0 0 24 3 1 #" "
0 0 14 3 13 #"redCircleMove"
0 0 24 3 1 #" "
0 0 14 3 5 #"Until"
0 0 24 3 3 #" (("
0 0 14 3 13 #"EdgeCollision"
0 0 24 3 1 #" "
0 0 14 3 9 #"redCircle"
0 0 24 3 1 #" "
0 0 14 3 4 #"left"
0 0 24 3 6 #")))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"ANIMATION2"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 9 #"Animation"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 9 #"Variables"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 3 #" [("
0 0 14 3 12 #"purpleCircle"
0 0 24 3 1 #" "
0 0 14 3 1 #"="
0 0 24 3 3 #" (("
0 0 14 3 6 #"Circle"
0 0 24 3 1 #" "
0 0 21 3 2 #"60"
0 0 24 3 1 #" "
0 0 14 3 6 #"purple"
0 0 24 3 3 #") ("
0 0 21 3 3 #"510"
0 0 24 3 1 #" "
0 0 21 3 3 #"320"
0 0 24 3 3 #") ("
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 8 #"Commands"
0 0 24 3 2 #"  "
0 0 14 3 1 #":"
0 0 24 3 3 #" [("
0 0 14 3 4 #"Loop"
0 0 24 3 3 #" (("
0 0 14 3 4 #"Jump"
0 0 24 3 2 #" ("
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 3 #") ("
0 0 21 3 3 #"550"
0 0 24 3 1 #" "
0 0 21 3 3 #"350"
0 0 24 3 2 #") "
0 0 14 3 12 #"purpleCircle"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                 "
0 0 14 3 5 #"Until"
0 0 24 3 3 #" (("
0 0 14 3 13 #"EdgeCollision"
0 0 24 3 1 #" "
0 0 14 3 12 #"purpleCircle"
0 0 24 3 1 #" "
0 0 14 3 3 #"any"
0 0 24 3 6 #")))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"ANIMATION3"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 9 #"Animation"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 11 #"Definitions"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 3 #" [("
0 0 14 3 16 #"orangeCircleMove"
0 0 24 3 1 #" "
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 4 #"Move"
0 0 24 3 1 #" "
0 0 14 3 12 #"orangeCircle"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 9 #"Variables"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 5 #"   [("
0 0 14 3 12 #"orangeCircle"
0 0 24 3 1 #" "
0 0 14 3 1 #"="
0 0 24 3 3 #" (("
0 0 14 3 6 #"Circle"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 1 #" "
0 0 14 3 6 #"orange"
0 0 24 3 3 #") ("
0 0 21 3 3 #"150"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 3 #") ("
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 14 #"greenRectangle"
0 0 24 3 1 #" "
0 0 14 3 1 #"="
0 0 24 3 3 #" (("
0 0 14 3 9 #"Rectangle"
0 0 24 3 1 #" "
0 0 21 3 3 #"420"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 14 3 5 #"green"
0 0 24 3 3 #") ("
0 0 21 3 3 #"300"
0 0 24 3 1 #" "
0 0 21 3 3 #"340"
0 0 24 3 3 #") ("
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 8 #"Commands"
0 0 24 3 2 #"  "
0 0 14 3 1 #":"
0 0 24 3 5 #"   [("
0 0 14 3 4 #"Loop"
0 0 24 3 1 #" "
0 0 14 3 16 #"orangeCircleMove"
0 0 24 3 1 #" "
0 0 14 3 5 #"Until"
0 0 24 3 3 #" (("
0 0 14 3 9 #"Collision"
0 0 24 3 1 #" "
0 0 14 3 12 #"orangeCircle"
0 0 24 3 1 #" "
0 0 14 3 14 #"greenRectangle"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 6 #"Change"
0 0 24 3 1 #" "
0 0 14 3 8 #"velocity"
0 0 24 3 2 #" ("
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 14 3 12 #"orangeCircle"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 6 #"Insert"
0 0 24 3 2 #" ("
0 0 14 3 3 #"Var"
0 0 24 3 1 #" "
0 0 14 3 12 #"redRectangle"
0 0 24 3 1 #" "
0 0 14 3 1 #"="
0 0 24 3 3 #" (("
0 0 14 3 9 #"Rectangle"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 21 3 3 #"260"
0 0 24 3 1 #" "
0 0 14 3 3 #"red"
0 0 24 3 3 #") ("
0 0 21 3 3 #"420"
0 0 24 3 1 #" "
0 0 21 3 3 #"160"
0 0 24 3 3 #") ("
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 4 #"Loop"
0 0 24 3 1 #" "
0 0 14 3 16 #"orangeCircleMove"
0 0 24 3 1 #" "
0 0 14 3 5 #"Until"
0 0 24 3 3 #" (("
0 0 14 3 9 #"Collision"
0 0 24 3 1 #" "
0 0 14 3 12 #"orangeCircle"
0 0 24 3 1 #" "
0 0 14 3 12 #"redRectangle"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 4 #"Jump"
0 0 24 3 2 #" ("
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 21 3 3 #"600"
0 0 24 3 1 #" "
0 0 21 3 3 #"400"
0 0 24 3 2 #") "
0 0 14 3 12 #"orangeCircle"
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 73
(
 #";; This is an animation that has two circles moving in the same dire"
 #"ction"
) 0 0 24 29 1 #"\n"
0 0 17 3 74
(
 #";;   with different speeds. They should bounce in different directio"
 #"ns but"
) 0 0 24 29 1 #"\n"
0 0 17 3 59
#";;   they do not which is a bug in the function calc-rbvel."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"BOUNCE"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 9 #"Animation"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 11 #"Definitions"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 3 #" [("
0 0 14 3 4 #"move"
0 0 24 3 1 #" "
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 4 #"Move"
0 0 24 3 1 #" "
0 0 14 3 3 #"red"
0 0 24 3 1 #" "
0 0 14 3 4 #"blue"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 9 #"Variables"
0 0 24 3 3 #"   "
0 0 14 3 1 #":"
0 0 24 3 3 #" [("
0 0 14 3 3 #"red"
0 0 24 3 1 #" "
0 0 14 3 1 #"="
0 0 24 3 3 #" (("
0 0 14 3 6 #"Circle"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 14 3 3 #"red"
0 0 24 3 3 #") ("
0 0 21 3 3 #"300"
0 0 24 3 1 #" "
0 0 21 3 3 #"250"
0 0 24 3 3 #") ("
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.5"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 4 #"blue"
0 0 24 3 1 #" "
0 0 14 3 1 #"="
0 0 24 3 3 #" (("
0 0 14 3 6 #"Circle"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 14 3 4 #"blue"
0 0 24 3 3 #") ("
0 0 21 3 3 #"300"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 3 #") ("
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 8 #"Commands"
0 0 24 3 4 #"    "
0 0 14 3 1 #":"
0 0 24 3 3 #" [("
0 0 14 3 4 #"Loop"
0 0 24 3 1 #" "
0 0 14 3 4 #"move"
0 0 24 3 1 #" "
0 0 14 3 5 #"Until"
0 0 24 3 3 #" (("
0 0 14 3 9 #"Collision"
0 0 24 3 1 #" "
0 0 14 3 3 #"red"
0 0 24 3 1 #" "
0 0 14 3 4 #"blue"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 6 #"Bounce"
0 0 24 3 1 #" "
0 0 14 3 3 #"red"
0 0 24 3 1 #" "
0 0 14 3 4 #"blue"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 4 #"Loop"
0 0 24 3 1 #" "
0 0 14 3 4 #"move"
0 0 24 3 1 #" "
0 0 14 3 5 #"Until"
0 0 24 3 3 #" (("
0 0 14 3 13 #"EdgeCollision"
0 0 24 3 2 #" ("
0 0 14 3 3 #"red"
0 0 24 3 1 #" "
0 0 14 3 4 #"blue"
0 0 24 3 2 #") "
0 0 14 3 3 #"any"
0 0 24 3 6 #")))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 77
(
 #";; This is an animation that has a soccer ball and basketball with t"
 #"wo random"
) 0 0 24 29 1 #"\n"
0 0 17 3 77
(
 #";;   velocities. When they bounce off a wall the color of the ball c"
 #"hanges to"
) 0 0 24 29 1 #"\n"
0 0 17 3 74
(
 #";;   the color of the wall. The animation ends when either the socce"
 #"r ball"
) 0 0 24 29 1 #"\n"
0 0 17 3 60
#";;   hits yellow wall or the basketball hits the green wall."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"CUSTOM"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 9 #"Animation"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 11 #"Definitions"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 3 #" [("
0 0 14 3 9 #"soccerPic"
0 0 24 3 1 #" "
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 2          29 4 1 #"\0"
2 -1.0 -1.0 0.0 0.0 0           9 500
(
 #"\211PNG\r\n\32\n\0\0\0\rIHDR\0\0\0`\0\0\0`\b"
 #"\6\0\0\0\342\230w8\0\0\21\25IDATx\234\325\235k\220\35E\25"
 #"\200\277\276\273\311\206\4vI6/\22\22B\b\30@\23\3\241x)\212\217\30"
 #"\252\24\201\250(\32\21_\221\370\0\344"
 #"\21\24\265\360UP*\224\242\26\226\b\n(%Z\"\6T\20QQKA\2"
 #"\226\240\21!Y\26\b\273\e\310\206<$f\37\271\307\37\247;\3233;\367\336"
 #"\231\2713\263\313\251\352\272}g\246\273"
 #"O\367\351>}\272\317\351\323FD\30k`\214i\3\346\3\v\200#\354\357|"
 #"\340\0\240\23\230V#\351\363@?\320\vt\1\e\200\365\366\267KD\6\212\305"
 #"<=\230\261@\0c\314\4`\36p2\360z`)\332\320\223\0c?\223\214"
 #"q\1^D\t\263\16\270\27\370=\320-\"\273\v\251P\n\30U\2\30c\26"
 #"\2g\2\247\2G\2mdo\350Z\361\270g\3\300\277\200\265\300\255\"\362X"
 #"\236\365J\3\245\23\300\30\323\2016\370"
 #"\271\300\261\4\215S\v\36C{\355\343\300\323@\17\312j\\\357u\215Z\1f"
 #"\0\323\2019\300\301(\373:\304\206}"
 #"j\344/\300\3\300\265\300Z\21\331\236\245^\231ADJ\t\300L\3402\2247"
 #"\357\261\25w\241\2126\350\6\340\307\300"
 #".\357\371\233\233,w\37`.\360V\340j\340Q\224%U#\345W-n\227"
 #"\0013Kk\227\22\32\276\35\270\24\350\213T\330\3057\2\237\a\216AY\3202"
 #"`\330\276\353\3\246\346\214O+\260\b"
 #"X\203\262\241j\f1z\354\373\366\227,\1\200q\300Y\300&\257\222.\354\0"
 #"n\1^\aT\"\351\256\365\276\373I"
 #"\301\235\303\0\307\3\337\a\266\307\340\271\311\326a\334K\212\0\266"
 #"\207\335\5\fEz\326\26\340\233\300B\354\374\23IWA\371\274K"
) 500
(
 #"\363\356\242{\240W\366|\340\253\350\374"
 #"\342\343<d\353\262h\314\23\0h\1V\3\333\"\254f\20\370\36pH\203\364"
 #"\307D\322L.\213\0\36\16s\200\357"
 #"\240\222\222\317\232\266\331\272\265\214I\2"
 #"\0\263\200\333c\206\361\335\300\342\4\351"
 #"[#\354g]\221C?\1>\27\333\336\37\255\317\355\300\2541E\0t\341\364"
 #"xdB\333\f\254\2\332\22\244\237\16"
 #"\374\320\253\260\240\23\361_\201\323\201}"
 #"F\201\0\255\300\267\30)8Tm]\227\216\t\2\0+,o\367\21\275\17X"
 #"\2300\375\22T\32\211\223\220\252\250\310"
 #"\3720\360.\240\265d\"\274\275\16^"
 #"[\2003F\225\0\300\371\36\257t\262\374W\2224\224\235/V\1;c\206y"
 #"\255\260\336\246\331\257$\2\374\250\1>"
 #"\3\300\371\245\23\300\16\3175\350D\351z\304VTdk8I\1\373\0037\21"
 #"HI\321\336U/^\5\376\215\256\244;\vl\374\375\201\247\22\3405\b\\\224"
 #"utfE\316MP\16\211>\340\244\204i\27\3\177\367\322\246%\200\37\177\n"
 #"\270\0\230T\0\1NN\201\3130pQ)\4\260lg\320\e\206\335$\220\221"
 #"\321E\317\271)YN\322\320\207\256\246"
 #"g$\304\243\35\350\0\246\0\a\331p"
 #"\210\355\34\213\201\243\201\233S\3420H"
 #"\6v\224j3\316\30\263\2]\301\216"
 #"\267\324\177\32\235\210\36n\220\256\23]"
 #"\344\274\27\345\375n\3\315\201\377\277\231"
 #"x\17\360\20:q\203\352\rZ\354\373\251^|\274\375\365\343\25\257^-^<"
 #"M\371\203\300\273D\344\266z\355\21\202"
 #"\24=\177):\363\273\341\327G\262\236"
 #"\377\n\224\345\324\32\302\315\260\240\244s"
 #"F\31\345\370\322Qb\0215i\343\317\",\347\367\3\257n\220\246\58\233b"
 #"XN^a\0\25\36\266\332\16\365\244\r\353\201\3774"
 #"\221\357\343$\\\2545dA\306\230\26\340g\350\36\276"
) 500
(
 #"Sf\274_Dn\251\223f2p%p\16\272)\a\265\207m\275wY\342\275"
 #"\300\227Pv\320O\260\250s\361A\264"
 #"\301!\340\335\240lk\330\306\207Pm\334]\350:%-.\202*{V\210\210"
 #"c\207\361\220\240\367\257&\314.\256$"
 #"\262\203\351}\333\206*Y\36&\371\260"
 #"\315\233\5\\\231E\32\251Q\237\343\b\213\332iqY\325\324\b0\306,BW"
 #"\265\35\366\321\375\300\273\321\tm.p"
 #"\30\252yZ\0\34\212\262\252F\32\256\"a7p\264\210\374;\257\f\2151\227"
 #"\3\237%[\275v\240\342\371#5\277"
 #"\250C\375q\350\20\364\251\272\35\35\276"
 #"\321\235\302f\342y\216\200_\222\367n"
 #"%\354\207\252,\263\342u\27u6\25"
 #"\353\25|\26\341\315\261\242\244\213<\363"
 #":-\317\306\367\332\342xT\230\310\202\327\20pV*\26d\214iG%\201Y"
 #"#^\3520\357Ew;\237B\365\270\eP}j\27\252p9-&]\321\360"
 #",p\260\210\f7\3742\3\30c\326\0WdL\336\3\34!\";F\274\251"
 #"A\3615\204)9\f|\34]\v\314F\347\204\330\241\216\316\21\2431\2\276P"
 #"D\357\367\3525\36eEYq\\\223"
 #"\210\5\241\326\v=\221\304\177#\301\276"
 #"\276M\337A\330\252\241\f\2\354\264="
 #"\2540\2\330\272\35\215j\306\262\340\330"
 #"C\214\265E\205\221\360\1K\4\227\30\340\6Ih\326'jW\363\v/\2554"
 #"\210'\375\256^\374\17\"\262>\t~\315\200\210<\4\\N6\334g\242m;"
 #"\"\323h\357\355\"L\275\235\300\376){\312\333\321\205M\31#`\17\5M\276"
 #"5\3526\0215\24\313\202o\27\320Q\223\5\1+\t\226\323.\361\r\31\220\234"
 #"\206N\322e\20`\3%\330\357D\352w8\351\330\254/9\256\254\307"
 #"\202\316\365\342\202\312\3737\220\22D\344y\340w^>E\262\240\37J"
) 500
(
 #"\234tQ \210.\364.$\330uM\212/\204\333\30\237\252\v\tL\6\35\305"
 #"\36$\243e\2\252+.z\4\f\1\363\312\354\375^\375\3063r\241\232\224e"
 #"\356\325\227\373#\340L\0301\"n\24"
 #"\221!\262\301\237\200\3472\246M\n\367"
 #"\210Hw\301e\304\202\210\f\242\332\270\27R&5h[\357\315\b`\2\252\310"
 #"\250z\3419\22h\230\32\364\222[\"y\346\31\206\201\323G\243\367G\352xN"
 #"\6\334\37\2&\210\310^\2,DW"
 #"\270\376\220\271\236\30\363\301\224\310\235A"
 #"q,\250\v\330w\f\20\240\225\300\360"
 #"8)\356\273\261l\310\261\234\223Q\236\346\303ubKh\2~\211.\\\212\200"
 #"\211\350y\200\321\206\245\4xT\321\35"
 #"\320F\320\206\266\371^\2\274\336\376:"
 #"*\375CD\356o\0263\321\305\333\355\344#\5\t\252\356\333e\237O\an\264"
 #"\347\311F\5\2141\316\320\300\341w\217\2108e\377btO\354c\250>\374>"
 #"\302urm\316\4\324\262\301\227UW"
 #"\3478D\317\244\376\220t\377\207\321\336"
 #"\363,\360\b\360s\340*T!\264\34\325=LG\25\373\303^\332+\250\241 "
 #"*\201\375\314!\254u\2539'\241:\23\177\e\243\ehkE\25*\235\36a"
 #"\267\332\312\347\5\307D\376\vj\2\376"
 #"\4\301\16\352F\213\320f\240WDv\326\311\357&c\314I\4\313\372\363\201?"
 #"\2\277\316\21\347\244\260\2\230l\343\335"
 #"\300o\352|\273\21\25\353]\317\357DM\3429\225\360\f}]\216=d\22*"
 #"\246\271\274s1\242B\255\326\36\364\362"
 #"\335\204nE\227\331\373\333\320\343N\16"
 #"\207\313\23\244Y\31i\353\267@\260\365"
 #"\354\330\300\t9\"y\16\1\253\330\232G\343{y\37E\330L\3467\224h\316"
 #"\16\274\201\300@\355\277\300\241\t\322\314$|\0d"
 #"M\5\345Mnrx\30\225Q\233\6c\314\370\b"
) 500
(
 #"\1n\26\221\27\363\310\e@\324\30\354"
 #"\323\356/\332 \27\345\225\177\28\e\25AA\317\35oL\220f3\360[\202"
 #"6Y\0\301\316^\25\2700\307\36r\2\201\375\350\213\300+\v\352\2117y\25"
 #"\372\37\260\274\204\336?\203`\335TM"
 #"S&p\236\207\357\275\25\364\370\277\203"
 #"\ri\273A\35\370\20j\234\5z\320\242\266e@s\360I\340\2376\336\6\\"
 #"c\2149\260\240\262\34\274\317\226\5:"
 #"\371\336\223\"\355\323^\374\200\n:\e;\26\224\213I\2111f\26\360f\373W"
 #"\200\357\212H5\217\274\243 \"[\320"
 #"3\3\377\265\217\26\0\3376\306\304)"
 #"\233\232\6c\314D\324`\301\365\342\37H#\343\2530\364zi;\361\376T\201"
 #"\257\3474D/\362\362|\2022\316\333\302G\b\257/rc\247\221r\226y\345"
 #"l\3\346\247L\177H\244\315C\177\326"
 #"\221P\367[\247\200\n\352^\300\345yy\321\215o\313u&\224\256qv\320\300"
 #"~5c9\267ze\334F\312\3752\302\352\336*\204\345\322\27\323R4\246\200"
 #"\327y\371\r\2s\312 \200-\373\0"
 #"\302F\304\353\311\361\244=\352\321\305_"
 #"\327\234\222!\217\31~\233W\b\354\344A7\270^[\227\203\325\1\313w?\352"
 #"\345\271VD\236\311\232_Z\20\221^\340\203hG\2U\35~\307\356\331\344\1"
 #"\357E\27\201\240\213\260\3732\344a\274"
 #"\260W\216\365a\31\31\324\220\26\346\3"
 #"o\264\361a\364pv\331\360'\340\213"
 #"\250\0211\350\226\370j\340\333\265\22\330"
 #"\216\323f\303x\373;\31\335T\233j\3034\224\270\16n\21\221]4\t\255\4"
 #"\22\0206~\2341f\222d[4\275\a\330\327\346\363\30\360\207f\21L\v\""
 #"\"\306\230\253QV\270\314>\376\2621f+:2\246\0234\352TT"
 #"\22\231\202\332\200\272\320N|\347\204`\343\355\a\31Q\214\2669\233\t"
) 500
(
 #"\357P\16\0\307g\340m\355\350\341\6\227OS\3077s\340\327\263\31ib\223"
 #"W\374\271&\360Z\342\345\263\271\202n"
 #"\247\3720\36xM\6\312\236\202n\317b\363\374I\206<r\3\21y\26\370\\"
 #"A\331O5\306\314\313\230v\272\27\357"
 #"\257\20,\f \240\314\262h\252\4\360"
 #"A\2\5\317\35\"\322\223\21\301<\301?\335\222T\361\2234\2768#Ns\274"
 #"|z+\3500uR\202\233\235_e\214\331/i\216\306\230%\350f\230\313\247"
 #"\346\204W\26\30c\246\241+V\bKzy\305\217\313\210\332\2/\237\256V\342"
 #"\367\177ZQ6tg\364\205\365\3716\3\365\tt\"\332\23\26y\237<HN"
 #";\252M\302;(Vg\234u\4\274\314\213ohE\217\375\373C\314\301\e\200"
 #";\21513Q\305\363\261\350\220>\2"
 #"\35F-\204\301\245\375\237\330\331f\224"
 #"a\265\27\217Jzy\304\0173\306\264K\n\253<\273\217\344o\377\257\a]\254"
 #"\270\243\244\376\214\277\rx&\362\334\227"
 #"\6\352I\v\r\17\247\25,\1-O\210g3\361A\22(a\"x\315EE"
 #"a\261m~x\5\25\35\243\222\20\250"
 #"\245t\326m\335\317\31c\16\316\230\266"
 #")\260\213\252\17\227P\3248T+\227"
 #"\6\226\20\270\317\354\a\272*\242\336c"
 #"\327\331\207\215f\377(\253\252\365\375\1"
 #"\300W\213\332\22n\0\207\22HqyK>\321\370+S\342\346\304{\1\326\211"
 #"\310\200k\240{\355o\243\331\337\377\337"
 #"\350\373\323P\305E\331\360!\324\30\300"
 #"\341\341~\213\210\37\233\24)cL+A\3070\2706\267\274)\31641.\236"
 #"t\16\330\273b\4\16,\221\367OE-$\322\342\2315\376\f\t\r\r\320\321"
 #"\262\213\32\246\211\335\204\335\206Q#\236\224\5\271\370T\340jc\214s"
 #"WP4\234\201\262\277\264xf\215O\301\332\366$\200SP#8\320"
) 500
(
 #"\266\356\6\273r\265\363\300Z\362eA.\276\2xgB$3\203\335r\376\4"
 #"Z\247,xf\211OD\245\310$\270\235\355\245]+\316s\2737D\342\16h"
 #"4\313\202\\\374)\nV\314\20(\202"
 #"\232\3013K\374\252\4\270\235\340}\37"
 #"\177@C\324\205\373\3\215\250\231\21\346"
 #"\242\316\374\n\1+m\235\333\360\303b\240\256(j{\377G\274G\17\210\357."
 #"?B\251\225\4\247\e\213\bg\26\324\373\17'\360\210^v\330I\35\343`t"
 #"\345\353\374R\357!rH/\372q\a"
 #"\341=\375\274X\220\213\27\302\212P\363"
 #"\357Ze\27\315\202\252\300\333P}q"
 #"'\21\243\6\213\233\373\276\213z\307T"
 #"m\202\313\n$\200\240\2768\233:y\23\301\267\223\300\341\367h\21@P+@"
 #"\347\263\356\16\324g\306\245\204\355W?"
 #"\25\305\177\204\263\16\273\371\366w\212\333"
 #"I\34\6\336#\"u\0256\306\230I\250\2\274\3\325\317NCM:fD\302"
 #"<\342\235\212\2145\350\3\216\22\221>"
 #"\377\341\b\275\247\210\364\31c\276A\340"
 #"\31D\b[\314\271\377\376\3634\361q\300\327\2141=\204\ev6\252-r\r"
 #"\273/\252\34\237\200\356\237\230\6\371\326"
 #"\212g\3053I|\0005\271\234j\361"
 #"\235\204\212\246q\337\177#\332\370\372&~X\2673rEY\324\320.\2325\24"
 #"\225w?*\264T\320\255\371\31\250\207"
 #"\310\345\3509\b\337\237\366&jX\a\306j\376Ed\2071\346\22\340F\2?"
 #"\237\241O\"\277\315\306k\275\333\205J"
 #"\20\333\321\355\361~\324\210\240\307\376\272"
 #"0\35\235\354\346\325\310'/<]\374AT\232y\334{\347py\324\356\4O"
 #"\261\337\357\1.\221\32z\203\232>\343"
 #"\354\366\301\35\350\6R\236,\310\305"
 #"\267\241R\201\337\220}\366\3279\204\332\201\16\363\335\300"
 #"n\251c\4k\214\231\r\\\a\274\t\355\225E\260\240!"
) 500
(
 #"[\306gD$\366\364\2471\346H\324M\3034\233\366n\340-R\353\300{\3"
 #"\tc\21\301m\30y\17\355\334\327\4\350|\361\31\364\234@\336,h;\252c"
 #"\256'\363\267\242\206a.\3556\328\267MR\251U\344\277xy\201\2/e"
 #"@\227\376\er\304\367\3174\270\17\1e\325WE\3225\324\f&\251L\v\301"
 #"\325$y\215\200\233\213j|\17\357\331\300O\31y\221P\232\370\0z\367XG"
 #"\202\362V\332\357]\36\267\223\304\225\177"
 #"\302\3128\327\305y\20\2404\aK\250"
 #"\221\331y\204\217\23%\305\263\37u\304"
 #"\235\244\234\327\20XM\v)\\\27\247"
 #"\251\214\357\274\273\231\3604)=p\345"
 #"@\210\343\b\37)m\24\376H\203\e"
 #"\237\274\274\27Yb\271\264\371;\357\366\n[\21\31fYF@n\347\220S\342"
 #">\r\275\23`\270\16n\273\201kH\256\345:\nU\254\370,kE*\2742"
 #"T\344\2\202\363\261Y\b\360\246\321 "
 #"\200\305\275\5=\277\20g\206\263\5U"
 #"\34%\332\247\262=\277\333\313'\323\5"
 #"\16Y+R\353\216\255F\241\213\4\23Z\t\2048=\206\345\34\224\"\375I\250"
 #"\276\333\245\37\242\254+L,\2\255\226"
 #"\bQ\317\342\316\37\177\255\211\372\2321"
 #"\320\370\25\324\27\206\303\355\237$\274\f"
 #"\310\246=\313\326\321\325k\320\266Ey"
 #"\227\370x\b]\300\310k\254\256C\357"
 #"\374\372>\272e\340\367\264ec\200\0"
 #"\313=\234\367\0oK\321\370W\332:\372\365=\257)|r\250P\334Enw"
 #"\243\326\2\25\364$\211Cx=9\335@\227\21\327q\266\307;<\177\5\214O"
 #"\220\3560\324\35At\316H5\341\26B\0\213`\334U\206\233P\2272S\b"
 #"/\344\266\240\26\2\245\373\370!\354\\i\20X\222\200`\253\b\373@"
 #"\2552\226\2562\364\220\235\25ih"
 #"\207\354\235\250\217\234\373\275\347C\300\327"
) 430
(
 #"(\361\216Ht\307\324\277*\367{\r"
 #"\276\177\271\305=*\305\335\306X\273\314"
 #"\323C\332]O\350<C\2710\200\372\223\216*\316\23/xr\300\355\353^\271"
 #"\275\324\260\330CM\357\257%<\267U"
 #"\321\225\356*\306\352u\266\221J\324\272"
 #"\3209.\276\311\216\220\334\364\3041\370"
 #",\216t\212Kb\276y\351_\350\34\251\220\177\245y=\2\210\35\31\27\0275"
 #"/\208\16\254\242f\201\355\366\271!|\245y\\\347x\351]i\36\251|;"
 #"\352\225+*\222\306\205\237\323\344-\332"
 #"\266Q'\243\222\313\211\250O9\277\214"
 #"\17\243\206\262k\320\323Aqx\364\330\367\205;\31Iu\225a3`\255-\316"
 #"\261\r0\227\260\233d!\320<\375\3\335W\377\v\360\274x\252<{\247\331D"
 #"T\371\335a\3639\310\376\272p J"
 #"\364\2116\370\266\242\202\325E\240\312\e"
 #"\3779\350\326\302\365\300\365\22\247@/"
 #"\0J#\300\336\2\365\220\337\251\250Hx,a\365!^|\b\225Z6\242["
 #"\0303mpn\3\332I\246rl\364\276\212\232d^\213\32\315n\317\263\276\215"
 #"\240t\2\204\n7f!\352W\364T\340HFz\357-\n\6\321\271`-p"
 #"\253\370\266\232%\303\250\22`/\22\306L@-\32NF%\242\245\250\305\333$"
 #"\232W\250\273I\276\37=\212u/\272\252\355\26g\">\2120&\b\20\5K"
 #"\220\203\321\363^\207\243\6\256\363\321\303"
 #"\27\235\4\26\a\20n\364\347\320\206\356E\331\326\6t\242}\2xr,4"
 #"x\24\376\17\305\277v<\341\317\220)\0\0\0\0IEND\256B`\202"
) 0 0 24 3 3 #") ("
0 0 14 3 8 #"bballPic"
0 0 24 3 1 #" "
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 2          35 4 1 #"\0"
2 -1.0 -1.0 0.0 0.0 0          12 500
(
 #"\211PNG\r\n\32\n\0\0\0\rIHDR\0\0\0d\0\0\0d\b"
 #"\6\0\0\0p\342\225T\0\0\27\fIDATx\234\325\235y\220]\305u"
 #"\306\177=3\222FBB+B\22\26\bI\2000\22\b\20\226\221\34\20b_"
 #"\4\206\330b\253\20\e0qH\34\n\227\343rR\t\216\355P86!\301*"
 #"'\244\\\220\230\230%\2208\200\tD\304H\20\31)\200\330\27\201@\e\1\255"
 #"\243e\30I3\322,\235?\276\356\271"
 #"}\373\3357\363\226\373\236\224\257\352\326"
 #"\314{\357\336\356s\317\351>}\316\351"
 #"\323\335\306Z\313\301\nc\314p\340x"
 #"\340\263\300\261\300\24`\32\320\fL\5"
 #"<\361&\372\37\340c\240\25X\5\254\1V\3\257\1\253\255\265{\352A\177%"
 #"0\a\223@\2141\207\2s\200\363\200\271\300d`\30bv\203\273<\303\e)"
 #".\20\e|\356\t.\3\264\1k\201\345\300\323\300\v\a\223\200\16\270@\2141"
 #"\303\200\5\300B`\0260\2hrWc\215\252\355\6\272\200N\240\5X\6<"
 #"\f,\261\326v\324\250\316\222p\300\4"
 #"b\2149\23\270\68\v\30\213\324\320"
 #"@\222\36`\203\377\213\241/\225\325\337"
 #"s\376\276\36`?\320\1l\5\236\5\356\263\326\256,\241\234\334Qw\201\30c"
 #"\276\f\334\0\234\0\214\2\6\223fNC\364H'\360.\360\26R5\37\273\277"
 #"\215\300E\300-\356>\317\344\225\300\17"
 #"P\17\e\v\214Cc\320\361\300q\300"
 #"\200\250\374\260N\v\354\5v\0\357\0"
 #"\367Zk\377\265\232\367-\27u\23\2101f!\360\r40\37\206\30\226\205}"
 #"\300\n\244F\376\a\370\b\330\215Zp\aj\315\373\321 \377,b\270G7p"
 #"\266{\36\304\374\1H\350\315\300\20d\f\314\6Nw\327\240\"t"
 #"t\1[\200\327\201\237Yk\37/\347}+\206\265\266\246\0270\17x"
) 500
(
 #"\n\330\200Z\243\37p\303\377;\201\305"
 #"\300\315\210YG\243\336\323X\244\314C\201\2072\312\3713`p?\3644\1\243"
 #"]\35\263\201?p\364\355\16\312\t\257"
 #".`\35\360\357\300\2315\347W\r\0051\16X\204\314\316,!X\340=\340/"
 #"\200sP\313\35RB\271\3\200\213Qo\b\313\\\16\214\253\200\316!\310\232;"
 #"\a\370!2\221\263\350\355r\364\336\t\214\374\177%\20d1-C\3728\253\325"
 #"\275\204t\377\347\201\21e\226=\36x>*o?pv\16t\217A\346\366-"
 #"\216\306,\332\333\200g\200K\17z\20185sg\37\255l\25p+\3609`"
 #"P\205\255\371\372\210A\335\300?\3\3r|\217A\216\306[\2017\212\bf5"
 #"\360=`\370A)\20`:\360(\32xc\342[\200\277vj!s\\(\261"
 #"\216)h\220\r\205\261\25\230V\223\326"
 #"*\353k\236\243\275%\243\221\265\271\306"
 #"p\334A%\20`~\206\32\361\327b\340\352rUSF\35\203\221\271\34\226\335"
 #"\t\374\270\26\302\210\352\36\341\336aq"
 #"\221w|\6\2704\217^Z-\241\315\300\265\300\253\31D\356p-kfNL"
 #"\231\n,\215z\307\373\300\204Z\v$\240a&\360cd\212wG\357\273\32\370"
 #"\n\320|@\4\342\364\354\r\2168\e\21\370:\360\373y\351u\344\4^\0311"
 #"`/\360\375z\t#z\357g]\357\f\343d\26\231\3667T#\224j\210\272"
 #"\36X\37\t\243\333u\353\363sf\302"
 #"d\340\337\"\375\275\168\262\316\302\30"
 #"\3\374\21\360AF\17\361t\255\257F(\225\20\325\354*\\\27\21\322\201\2t"
 #"3j\300\210K\220\a\357_~\17\362"
 #"\236\353)\214\243\201\273\212\214!\271\t"
 #"\245\22\302\256q]3\354\31{\200\ap\216\31.$\223\23#F"
 #"!\207-|\341\377\5N\255\2430f\0\367g0\336\2\317!\203"
) 500
(
 #"fw\364\333\6\340\332\232\n\4YS\257D\302\350\4\236\250\2050\\ysP"
 #"p1\264\254\226\324Q\30\247\2\277\316"
 #"\20\306>\24r\231\16\34\t\374\2h"
 #"\217\356y\25\230_\23\201\240\350\354s"
 #"\31-d;\360\247\265\20\206+\363\306H-l\1n\254\203 \fp\n\np"
 #"\306\252\251\25\370'`Xp\377\4\247%\366E<z\36\230\236\253@\234\332x"
 #"$j%\241u\261\264F\302\230\354^2nu}\6\20s\22\306\251\2010\272"
 #"\203\372\267\1\337\213\357w\177\3079>"
 #"\305\3\376#\224\30\377*\225\300;\311"
 #"\366\300=\221\357\3\347\324\2001\347\223"
 #"\30\17\336\324\275\257N\302X\0215>"
 #"\213\242\2\231\2753\20\312\251\300\222\210"
 #"O{\200\333s\21\b\n\24\306\261\251"
 #"=\244\3\207\255\324\300cF\341\370\360\3056\0_\254\261@N\nzF\254\232"
 #"\257\354O\230\356\357\2\340\355\210\366\325"
 #"\300eU\t\304u\301e\21q\233\201\277\1\356\213*\\\2263c\16\a\376!"
 #"\252\373Er\f\"f\3249\25\370\227"
 #"HM\365\270\236\261\260\314\262\276\206\242"
 #"\25!\375\277\241\237)\202\376\n]\344"
 #"zC\310\370;\321\334\367\267\243\357W"
 #"\221S\230\304\325}\26\351@b\a\360"
 #"\2175\24\3068\327\320\342qr[\271"
 #"\302p\345\35\2\374$\342Q[\177\232"
 #"\244\257\2\347\241\t\231\260\300\305\236\351"
 #"\300o\273\n\374o\233\201\233sd\320"
 #"\365\244\235\301\r\30055\22\306 \340\17\243w\265\256\205_WE\271'Q\30"
 #"\220|\17\230W\211@\236&=\240\265\0W\a\277\317\4\376+j\301\17\347\304"
 #"\240F\22g\320_+\201\243j$\220/\a\232\300\277o+9\304\312P\224x"
 #"[\324\363\236*v\177\234\341\1\364&$\234@:\245\346~'$\217\217"
 #"\320\344\r\256\242A\3001Y\345U\200Ih\356#\304Fk\355\206\234\312\357"
) 500
(
 #"\2051\34644\0215\4\275\207A\215\353Ik\355m9T\361\f\n)\365V"
 #"\t\234\340x\\\200L\201\240\354\220\211A\1\357!\251\356\3627Xkw\0o"
 #"\6\367\0\2140\306\314\250\220\360\20\307"
 #"\240\264\35\21764F\345\nc\314x\24s:\335\177\345\376\276\211xP5\254"
 #"\265\333\201\307\21\17=&\2\277\227u"
 #"\177\201@\\\336\324d_\236\373\373sdm\305\330\bl\n>\17E\231\34\325"
 #"\342H\24\314\363\330\214,\254\274q\31"
 #"\232\303\200\344]\327\0007\271\6\227\27"
 #"\226!\36\372z\fp\2541\346\222\370"
 #"\306\254\36r\3\312\233\302=\3702\260\324Z\273/\343\336\26d_{\fE\211"
 #"\v\325\342(\244B\302z^\313\241\334^\30c\346\2\277\213T\255g\322V`"
 #"\221\265\366\215\276\236-\27\216wKQ"
 #"\342\204\357\205\343\220\237\225BJ ."
 #"\275s:\351\354\276\a\220\371\231\205-"
 #"(\303\317\303g\245W\fc\314\30\22u\331[\217\265v]5\345Fu\fE"
 #"\23^\276\361\0304\330>\17\3744\257z\"\274\r<\26|n\2f\30cR"
 #"\32%\356!\327\0#\203\317\353\200\225"
 #"Ez\a\310z\360\272\335\272\362\306\e"
 #"c\232+\245\32\365\216#\202\317\373\320"
 #"\374B\3250\306\370\326y\1RW\220"
 #"\250\252\267\200\37Zk\273\362\250+\206U\206\375o\20O=F\21\215%\275\2"
 #"qK\1\346\243d\2O\344\243(NU\254\222.47\1IW<\4\345\322"
 #"V\212\t\244\323Cw\221\223@\254\265"
 #"\326\365\300K\3218\5\242{;\360\210"
 #"\265\366\325<\352\351\3\357\242@\243\307"
 #"`\340\fc\314@\377E\330C.A\311\311\306]]\300\263\326\332\226~*i"
 #"\1>\t>7\3'WA\364x\322\2\331\201\6\332\274p\5\nZ"
 #"\206X\t\334\223c\35\231p\26\327s\301W\6M\v_\356\277\b\5\262"
) 500
(
 #"\0201\323c\t\2451\2425\272o\0\325\215#\343PW\366\330F\332d\254\30"
 #"\306\230!(\00216\370z\35p\177\316VU_XK\332bmF\316#\340"
 #"\4\342\324\325,\24\243\362\352\352q\322"
 #"&m1|\352*\361\30\200\306\201J\341-<OG+rB\363\300e\24Z"
 #"\201+\200z.9\370\4\r\5 Cb p\21234z{\310\34\224\f\6"
 #"\352F\335\300\253\326\332\275%T\260\233"
 #"d\34\301U\20{\331%\301\0303\212\264\311\r\320f\255\335_Iy\31\270\220"
 #"B\377fI\216\345\367\v7\270\277\214"
 #"x\354\227\350\215@\35\242W \347\221^>\266\2\331\344\245`\17z1\217F"
 #"\24:\257\4\243\321R\203\20\245\322\321'\2141\247#\223>\304R\224\17Po"
 #"\264\240q\313c\0j,\275\2\231Kz\1\3152\244*\372\2053\2117F_"
 #"\17r\326L\271\30\216\234K\217\35\31"
 #"eW\212\213I\307\332Z\321\34\316\266"
 #"\234\312/\a\273H\306\21\213\4r\16@\203[z<\205t\17y\221\22\5\342"
 #"\20\17\210Mh\205S\271\30K\242:A\263\222;+('\5gV\316\"-"
 #"\354WHVZ\325\e\241@\f\342\375dc\314\260\6\24\304\eJ\242\263\367\3"
 #"\37\226\351 \355#\315\270F\322\246k"
 #"\251\30A\232i\273\221\217P-\276@\241\367\277\302Z[,\2QS8\336\256"
 #"E\203\272G30\265\19q>V\17r\4K\31\314C\264\223\366E\fR"
 #"?\345\342\20\344,y\264\242\360L\265"
 #"\370-\322\r\344cr\216\215U\200\275\300\207\321w'7 \325\22\372#\357!"
 #"\6\227\203\16\322\214kBs\32\345\342P\322A\305n\224\30W-N$\355\333"
 #"\274\215\362s\17$\332I\346\223@28\266\1\215\37\241@\366"
 #"P|\205l1t\"\177\304\303\220v2K\305H\264s\203G+"
) 500
(
 #"i\v\256l\30c>Ca\343x\223\234\234\315*\0207\342\6`J\3\332;"
 #"$\334\262\342\"\340\n\367\"\345\24\36"
 #"2n\200+\267\\\330\350s\17\325\367"
 #"\220\231\244\325\247\5>\250\247\357\21\303"
 #"\0303\210d\17\27\217\6`Z\3j\311\341\0302\26\270\e\370\2011\346\2240"
 #"\360\325\a\272\320\0LTV\2718\204\302\235\30J\331\231\241/Lq\345z|"
 #"\200\306\220\272\303\30\323`\214\31\207B"
 #"\377\17\243`\256\37\330-\320\334\200\342"
 #"N\241\312\362\f\375\n\n\237\\m\214"
 #"\31c\214\351k\337\21\237\307\344\321H:\204^*|\350\337\v\324\357IR\r"
 #">K\332\331\\Oi!\241\334`\204\301h!\351O\321\354\341D\222\2111\220"
 #"\f\246zA\230\340\207\360\377\317\240\244"
 #"\342\237\3\247\ec\6\31c\262f\31"
 #"\333H\302\364\336\256\36\231q_\177\360"
 #"\202\360\365\267\344\340\270M\"m(\254!?g\263O\270\0361\209\244\337G"
 #"\221\201+\302[H\363=\265\307\207g"
 #"\306>\222\326\356\277\277\bE\177\357E"
 #"\201\260\246\f\301\304eU\242\266l\364"
 #"\267Zu\5\211_\343\313\374\4\205."
 #"j\6'\b\203\264\317\35\310\1\375\26"
 #"\351\341\301\242\336\37\276\263\r\231\352\347"
 #"@nA\263g\241\323\2\262\274\256E"
 #"\36\346\23\300\271\301\f\\\36\214\v\313"
 #"\311\245<\27\276\361\275\303\227\331j]"
 #"\302T\336\b\3701\3\370;\264\273\304"
 #"7\221\266\b\3534(\272\361$\21\237C\225\5b\3723(\372{\27r\361c"
 #"&5\243@\330\23\300\253\306\230o\242\361\2423\270//\1U\vC\3414\365"
 #"\356\254\e\253\256\310\230\21\300Bc\314"
 #"\263\250G|\35\5K=\35\341\216G\313\221\352\272\205$d\325{O\230\255g"
 #"\201\311A\326\335\211(\371x\177\360{\2706\244\313\375"
 #"\266\ry\235\341\357\e*\310\362\213\23\270\253Zz\200\26"
) 500
(
 #"\334\304\351\260\25\247\206f\224?\30\5-\357GS\20\355\216'a\306gx\275"
 #"\203\264L\223{~r\314\327\320\1\364"
 #"#~\30\334{\e\270\316\275\330\255N"
 #"\252^\242~\237\251F\344\5\207\203\270\1\206\ec\346Xk\227S><-\325"
 #"\356(whT\306f\n\3\241e\301\30s\f\212\215-@kAF \255\321"
 #"D\322\312c\225\370\16Z\337\376\4\232"
 #"\337\361\226c\201\3\356\277\bU\3140"
 #"cL\203\265\266\307Z\333\3\3543\306\274\f|\25e\303_\207raCg+"
 #"\36\213@\314x\334\30\263\23E\217_"
 #"D\36\362\362\22\2\227\276\214\221\306\230"
 #"\261\326\332J\347Db\225\345[ni\17\313\324?\5%\377\371k8\312\345\32"
 #"\214&\343\212\325\vZ\203\3703\244\302"
 #"v\205\331;\316(\32\37?\323\204T"
 #"\315d\22\351\16E\255\252\227p\307\300"
 #".c\314\n4\340\377\4\305\357\257C\236p\357\255Q\5c\3345\21Yj\35"
 #"@\2071f\203\253\367m\324z\326Xk\327#\207-\264\315\275%R)\274\332"
 #"\360h \303\363w\246\351\4\344D\372"
 #"\235\347\246;\272\375\346g\203I\a>=}\220n\320\353\320^^\277BNh"
 #"\261\31OC:\377\255\eX\327D\262T\315\27z\204\273\261\200p'\230]\300"
 #".c\314:\264\251\327T\224\305\361E"
 #"\322[\267\206\0047\223\216m\35\211\234"
 #"\244v\24\365\334o\214\371\24E\tBZ&\2\v\2141k\334w-h\0061"
 #"\f\365\364\370\314\30gU5\2702:Q\203\v\3519\34\270\312\0303\323\225="
 #"\1\371Z\203\22156\220\204\361^\r"
 #"\25\260!\250\333\377\335\200z\303\323h\314jA=\242/kn\20\351\351d\200"
 #"\216&W\300\264\240\360\311\216\230>C\360\326\332\335\310bYo\214y"
 #"\27\315[\334A\272\265\24\263\266\374"
 #"\256\243\207\24\371\335\343x\340/\221"
) 500
(
 #"o\4\311\366~\251r\2151~9r\270\177\243\377\34\306\344\f\360%$\254A"
 #"\356\212\367`\354\17\6\5`_CK\337\376\e\365\212m\300\3662\346\221\6F"
 #"\264Y\340\275&\344\271\372\256mP\353-%~\25b+\211\367\353[\305\26\340"
 #"\217Qf\371\211H\350\375M\353\306\352"
 #"\2529\"\272R\204\252%\236\263/\305\tmA\r\367u\340\5dQmwW"
 #"K\205~M3\351d\220\36`M\23J\226\16\a\272\343)?t>\220\364L"
 #"\237\5\332\255\265\2770\306,A\366\370"
 #"H$\220\243\321\34\314$\224.4\211"
 #"d#\312P\30\241p\372\202\277\257\24"
 #"\306f\225\31~\356D\236\374z\324\352"
 #"\327\"\376lF3\242-\326\332\274\342`\361z\232\36`u\23Jo\f\35\227"
 #"\23H3\267\0244\223d\232x\346\264\1Xk7\22\304\216\\\336\357\30d."
 #"\372k8\22\330\271hm\3410\222t\2446w\35Bz\222\251\267\310\350o\26"
 #"<M\6\251\226\265\210\361\333\321\234\313"
 #"&\324\243?uu\355\364\227\265\266\255"
 #"$\16\224\217aHs\2044\276\333\204\222\245\333H61\36\0L2\306\254\262"
 #"\326v\27\24\223\215\201\244\375\220n\212L,Y\355\34\3751\31!pc\314\26"
 #"\324{\374\\\3126\264e\305\177 \301"
 #"e\205 F\223\364\350\355\244g;\333\201\337AB\366!\224\217QXc\31\32"
 #"\217\332\321\0\\\2629\\-\234\311;\201\264&j\3V5Yk[\2151k"
 #"I\266\370\68\r\271\367\245:Q\3I\302\4\336T\255\244ko&=\363h"
 #"\321\346\371\317\365\365\220\17tf1\325"
 #"e\325\234L\"\220Q\344\274\274\241\2\f'\311\240\364^\372Zkm\253w\232"
 #"^ m\357\237E\332c\357\17\303H\362y\375Z\213J&\201\332"
 #"\220\5\23\226\333o\366J\340\304f\3415d\252{\34\205\324\362\201"
) 500
(
 #"\304\b\224c\fIP\367\5H\274\330gHO0\315%\235\220\334\37\206\220\316"
 #"\347\355\2440\243\242\24l$\235\3663"
 #"\224\376-\263\376\260\222\302\371\217\223\215"
 #"1\23\252,\267\32\214E\1\\\217.$\203^\201,'iE~\341\315)."
 #"[\274\24\f%-\300N*K\"\330I\242\262|\213\37_\344\336\222\340L\322"
 #"\267H\367\2749H-\327\35\216\247\263"
 #"\220\225\345\335\215]H\6x\335\373)jI\241\323u\31%0\303\30\343S~"
 #"B+\247\233\364R\267\222`\255\r\263W|c9\324%aW\203\245\244\363\306"
 #"&\223\317Z\310J0\36E\210A\357"
 #"\270\37\255R\373\324\177\341\361\b\n\243"
 #"x\314\247\264,\366\321hB&\304\256*\314\30581n8\311j\247J\361k"
 #"\322\213SA\23lgVYn%8\n\b\353\335G\260\252*\24\310\223\310\343"
 #"\366NY\23pv\tI\323c\320\26\22\36\355(\335\276Rl\"m\241\r\243"
 #"z\265\325\216v\22\r\347\347O\5.-\222#P\23\270I\2543H,>\213"
 #"\32\340\257\374=\275\304\270.\263\0041"
 #"\324\253\237/\241\310g_8\34\275\234G;\331k\332K\305&\322K\20F\221"
 #"\254\233\257\6\17\223^\2\0\232\323\270<\343\336Za\32pU\360\271\35-9"
 #"\357\325&q\353x\220\264\3571\31\230"
 #"\345\22\273\n\340\346\220\247 \265\342\35\266=(\350V)6\222v*GS\345"
 #"\226\35\306\30c\255\335\2146\202\361V"
 #"\234u\345^\357vt\250)\\\210\1776j\340\236W;\20\317{\221\22\210\265"
 #"\366y4\30\207\241\367kI\253\244\20G\"\23\31\222\360\304&k\355[U\320"
 #"\376\21i\37f \325-\221#\b\376=\210T\27$Z`>\n\202\326\0323"
 #"\21/}\335]\300;\216\347\275\310\322\237\367"
 #"\222N\2239\r\370B\221D\271)$\16\16\310"
) 500
(
 #"Bz6\343\276\222\341T\347'\321\327c\362h\305.\307\353!\322&y3p"
 #"\2451&s\357\221<\340\306\251\271\244"
 #"M\355\255\210\327\5DfM\336\373]\344\374\265\212hOE$\314o\221d-"
 #"Z\24%\235\233C\362\300M\244O\274Y\5\\\224cr\302mH\v\204\264\177"
 #"\0\\\220W\35Q}\363H\216\275\360"
 #"\323\310\231;\360\25\2630\26\221,\344"
 #"\264h0\272\310Y\t\36'\222\254\367"
 #"\366\335\177\223\265\366\205\"e\226\203\r"
 #"\244W\366\36F\332p\250\26\177\217\266"
 #"\f\201D\325N\5\376\326\0303?\307z\274e\265\200$\262k\20o\27e>"
 #"\320\207T\237\"\335K\342\r\314n\212~\337\6|;\247\0265\5-U\16S"
 #"d\36\312\271\325~\216d\37\342\360\372"
 #"\08#\307z\256&}\366\210\245\217"
 #"\r\314\372\353f\253\242\202\26\243\336r"
 #"L\206\300\336\2&\346\364\22Y;\312"
 #"-\243\312\243 2\352\271\200\364\256\331"
 #"\341\336\355\227\347P\376L\222-\376|"
 #"\331\253\250d\213?W`\261M0\377\234t\"X+pW\316\314\372ZT\307"
 #"\373\300\271y\326\21\b\305'\323\205\e&o\1\276SE\271\3\320\371)!\357"
 #"\366\242\355\237\212?\327O\241\3416\261"
 #"\376\332C\341\21so\1\307\344\314\250"
 #"s\243\326\273\3\370A\336\2qu\235\357TU\370N=(\350\367\0000\252\202"
 #"2oD>O\334\313+\337&\326\25\34n\244\334\23\374\355\t\30u[\r\230"
 #"t\34\360\313\250\336\305\265\20H\320\0"
 #"\336\217\336\257\ay\323o\2\27\227P\206\337H\371|4\17\23\nc\r%l"
 #"7[*\261\341V\343\361\276\357O\2"
 #"\207\326\210I\177\22\t\344]\340\370\32"
 #"\325\325\210\374\204\307\243^bIf@\177Y\254\376@\0303(\334\32\266"
 #"\3\270\263$:J$6\336\214?\224\372U5l\265\v\34#|}["
) 500
(
 #"\201[kX\237A\6\313\2172\336\325"
 #"\242\310\354Z\340\366,\325\203T\374\303"
 #"\24n\306\377h\251j\257\34b\247\223"
 #"\230\211\276\302\375\256\262\361a+\311\221"
 #"A'\241\2314\e\324[3\265\25\324{\30\332]\357}\n{\213W\323o\243"
 #"\304\300I\356\231\303I\37W\341y\364<y\37W\21\20\232u\240K;\312\f"
 #"\231\220\267PP\346\341w#\206|\0\234P\a\241\370`\340=Qk\17\5\263"
 #"\23%\317\335\r\374'\211\261\343yS\273\3]\2B\257!9\231-<\177\252"
 #"VG\36]J\332\252\333\t|\267\326\2\t\352?\29waO\215\257\275\244"
 #"\r\36\353xT\333#\217\34\201\376P\260\365\31B\311\375P0dm=\26\251"
 #"\255\227\362V\217%\3201\3m\256\34"
 #"\273\1=\21m\226z\36\n\346\210\253\333\261yh\3462>Gd+pa="
 #"\5\342hi@9^_ES\4\241#\351y\260\316\t\243\354\263~+\26H"
 #" \224b\aK\276\206\34\243\20191b.\232\270\362-\262\3x\254\336\2\t"
 #"\350\371:\232D+v\260dE\302\250J \216\260f4\246\274B\241^\335N"
 #"NG\257\"\v\346\356HEl\5\216\255\263 f\242\305\260\261\an\35\17\256"
 #"\255DM\345&\220\200\320\371dGN-\371\35N|a\244\257\333\201{\352$"
 #"\210\21(G\270\330\341\304\317Q\2465"
 #"US\2018\242\247\223\244\22\305\4\267"
 #"\270\2265\17h\250\260\374I(;#\354%[\310)\302\\\244\316Ah\351\336"
 #"]h64\36\310;\334;\347f\206\347\375\2Y\a\334\207\327\eTx\300="
 #"\32\334\27F\345\355\3~T#A\314\6\276C\341\24\204\277\326\270w-;\360"
 #"X7\201\4/\264\20\231\207a\350>T7/\241E\363\237\a"
 #"F\227Q\356$\367lX\346\16\202\265\365U\322=\6\31\20\267d"
) 457
(
 #"\324\343\351\337\343\336\255\354s\251\16\230"
 #"@\334\313\215C\363)\305Z\230u\277\335\341\324\302d`H?e\16F+\177"
 #"CFu\241\365\36\215\25\3229\4\315"
 #"P\236\a\374U\37\275\273\a\315\233,"
 #"\242\237\20\372A)\220\340\205\347\241\331"
 #"\305\217\212\274\250ouO!\177c6Z\3666\32\267\343AT\336\204\250\365Z"
 #"\224\2600\213\22\234E\247\372F\273:f\273:\27\223$=d]\37\241\25\266"
 #"\363j\315/\0372\2569\334\231K\337@\255q\f\311\352WK:Q\273\3%"
 #"\332\255@\233\r|\210\4\326\201\306\214"
 #"\36\264\251\245\37\340q\317/E'\307\371\375Y\32]\35\315hLhF\275a"
 #"*\22\304\351He\206\253\230BZ:I\226\277-\262\326\206\247\32\324\fu\23"
 #"Ho\205:R\351\6\264hf\24\205K\231\343\265\202\235(yo\25j\251\357"
 #"\243)\343\333\321\374~\370\314\315h\366"
 #"\322/\271>\2\251\302\251h\251\334q"
 #"\24\2560\16\237\367\346\364N\24\315\275"
 #"\327Z\373(uD\335\5\322[\2612\317\257A>\314X\324R\313]\216\235\27"
 #"\366\243\36\270\25\3457?h\243\214\302"
 #"z\341\200\t\244\227\0\235\314p\t\262\314f!'\254\21\265\362F\n\227<W"
 #"\372\177\370\331o\35\330\215T\334J\344O<i\335:\215\3\205\3.\220\20N"
 #"8s\220\3053\27\251\233a\210\211\r$[j\370Me\372\22B\17\311z\307"
 #"\236\340s\e\32\27\226\243\301|\371\201"
 #"\26B\210\203J 1\334\nZ\277\235"
 #"\352\261\310 \230Fi\207\217}\210\324"
 #"\320{\310\224]\215\346\344WYk\313\331\327\276\256\370?\360"
 #"lgLL\37\230\e\0\0\0\0IEND\256B`\202"
) 0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 9 #"Variables"
0 0 24 3 3 #"   "
0 0 14 3 1 #":"
0 0 24 3 3 #" [("
0 0 14 3 6 #"soccer"
0 0 24 3 1 #" "
0 0 14 3 1 #"="
0 0 24 3 3 #" (("
0 0 14 3 7 #"overlay"
0 0 24 3 2 #" ("
0 0 14 3 6 #"circle"
0 0 24 3 1 #" "
0 0 21 3 2 #"49"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"white\""
0 0 24 3 2 #") "
0 0 14 3 9 #"soccerPic"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 21 3 3 #"400"
0 0 24 3 1 #" "
0 0 21 3 3 #"133"
0 0 24 3 3 #") ("
0 0 14 3 14 #"RandomVelocity"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 14 3 9 #"rectangle"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 5 #"bball"
0 0 24 3 1 #" "
0 0 14 3 1 #"="
0 0 24 3 3 #" (("
0 0 14 3 7 #"overlay"
0 0 24 3 2 #" ("
0 0 14 3 6 #"circle"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"white\""
0 0 24 3 2 #") "
0 0 14 3 8 #"bballPic"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 3 #"266"
0 0 24 3 3 #") ("
0 0 14 3 14 #"RandomVelocity"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 14 3 9 #"rectangle"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 12 #"redRectangle"
0 0 24 3 1 #" "
0 0 14 3 1 #"="
0 0 24 3 3 #" (("
0 0 14 3 9 #"Rectangle"
0 0 24 3 1 #" "
0 0 21 3 3 #"600"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 14 3 3 #"red"
0 0 24 3 3 #") ("
0 0 21 3 3 #"300"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 13 #"blueRectangle"
0 0 24 3 1 #" "
0 0 14 3 1 #"="
0 0 24 3 3 #" (("
0 0 14 3 9 #"Rectangle"
0 0 24 3 1 #" "
0 0 21 3 3 #"600"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 14 3 4 #"blue"
0 0 24 3 3 #") ("
0 0 21 3 3 #"300"
0 0 24 3 1 #" "
0 0 21 3 3 #"400"
0 0 24 3 3 #") ("
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 15 #"yellowRectangle"
0 0 24 3 1 #" "
0 0 14 3 1 #"="
0 0 24 3 3 #" (("
0 0 14 3 9 #"Rectangle"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 21 3 3 #"400"
0 0 24 3 1 #" "
0 0 14 3 6 #"yellow"
0 0 24 3 3 #") ("
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 3 #") ("
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 14 #"greenRectangle"
0 0 24 3 1 #" "
0 0 14 3 1 #"="
0 0 24 3 3 #" (("
0 0 14 3 9 #"Rectangle"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 21 3 3 #"400"
0 0 24 3 1 #" "
0 0 14 3 5 #"green"
0 0 24 3 3 #") ("
0 0 21 3 3 #"600"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 3 #") ("
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 8 #"Commands"
0 0 24 3 4 #"    "
0 0 14 3 1 #":"
0 0 24 3 3 #" [("
0 0 14 3 4 #"Loop"
0 0 24 3 3 #" (("
0 0 14 3 4 #"Loop"
0 0 24 3 3 #" (("
0 0 14 3 5 #"Accel"
0 0 24 3 2 #" ("
0 0 21 3 3 #"0.2"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 14 3 6 #"soccer"
0 0 24 3 3 #") ("
0 0 14 3 5 #"Accel"
0 0 24 3 2 #" ("
0 0 21 3 4 #"-0.2"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 14 3 5 #"bball"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                          "
0 0 14 3 5 #"Until"
0 0 24 3 3 #" (("
0 0 14 3 9 #"Collision"
0 0 24 3 2 #" ("
0 0 14 3 6 #"soccer"
0 0 24 3 1 #" "
0 0 14 3 5 #"bball"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 12 #"redRectangle"
0 0 24 3 1 #" "
0 0 14 3 13 #"blueRectangle"
0 0 24 3 1 #" "
0 0 14 3 15 #"yellowRectangle"
0 0 24 3 1 #" "
0 0 14 3 14 #"greenRectangle"
0 0 24 3 1 #" "
0 0 14 3 6 #"soccer"
0 0 24 3 1 #" "
0 0 14 3 5 #"bball"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 2 #"If"
0 0 24 3 3 #" (("
0 0 14 3 9 #"Collision"
0 0 24 3 1 #" "
0 0 14 3 6 #"soccer"
0 0 24 3 1 #" "
0 0 14 3 12 #"redRectangle"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                             (("
0 0 14 3 6 #"Change"
0 0 24 3 1 #" "
0 0 14 3 5 #"image"
0 0 24 3 2 #" ("
0 0 14 3 7 #"overlay"
0 0 24 3 2 #" ("
0 0 14 3 6 #"circle"
0 0 24 3 1 #" "
0 0 21 3 2 #"49"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 2 #") "
0 0 14 3 9 #"soccerPic"
0 0 24 3 2 #") "
0 0 14 3 6 #"soccer"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 6 #"Bounce"
0 0 24 3 1 #" "
0 0 14 3 6 #"soccer"
0 0 24 3 1 #" "
0 0 14 3 12 #"redRectangle"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 2 #"If"
0 0 24 3 3 #" (("
0 0 14 3 9 #"Collision"
0 0 24 3 1 #" "
0 0 14 3 5 #"bball"
0 0 24 3 1 #" "
0 0 14 3 12 #"redRectangle"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                             (("
0 0 14 3 6 #"Change"
0 0 24 3 1 #" "
0 0 14 3 5 #"image"
0 0 24 3 2 #" ("
0 0 14 3 7 #"overlay"
0 0 24 3 2 #" ("
0 0 14 3 6 #"circle"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 2 #") "
0 0 14 3 8 #"bballPic"
0 0 24 3 2 #") "
0 0 14 3 5 #"bball"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 6 #"Bounce"
0 0 24 3 1 #" "
0 0 14 3 5 #"bball"
0 0 24 3 1 #" "
0 0 14 3 12 #"redRectangle"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 2 #"If"
0 0 24 3 3 #" (("
0 0 14 3 9 #"Collision"
0 0 24 3 1 #" "
0 0 14 3 6 #"soccer"
0 0 24 3 1 #" "
0 0 14 3 13 #"blueRectangle"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                             (("
0 0 14 3 6 #"Change"
0 0 24 3 1 #" "
0 0 14 3 5 #"image"
0 0 24 3 2 #" ("
0 0 14 3 7 #"overlay"
0 0 24 3 2 #" ("
0 0 14 3 6 #"circle"
0 0 24 3 1 #" "
0 0 21 3 2 #"49"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 2 #") "
0 0 14 3 9 #"soccerPic"
0 0 24 3 2 #") "
0 0 14 3 6 #"soccer"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 6 #"Bounce"
0 0 24 3 1 #" "
0 0 14 3 6 #"soccer"
0 0 24 3 1 #" "
0 0 14 3 13 #"blueRectangle"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 2 #"If"
0 0 24 3 3 #" (("
0 0 14 3 9 #"Collision"
0 0 24 3 1 #" "
0 0 14 3 5 #"bball"
0 0 24 3 1 #" "
0 0 14 3 13 #"blueRectangle"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                             (("
0 0 14 3 6 #"Change"
0 0 24 3 1 #" "
0 0 14 3 5 #"image"
0 0 24 3 2 #" ("
0 0 14 3 7 #"overlay"
0 0 24 3 2 #" ("
0 0 14 3 6 #"circle"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 2 #") "
0 0 14 3 8 #"bballPic"
0 0 24 3 2 #") "
0 0 14 3 5 #"bball"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 6 #"Bounce"
0 0 24 3 1 #" "
0 0 14 3 5 #"bball"
0 0 24 3 1 #" "
0 0 14 3 13 #"blueRectangle"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 2 #"If"
0 0 24 3 3 #" (("
0 0 14 3 9 #"Collision"
0 0 24 3 1 #" "
0 0 14 3 5 #"bball"
0 0 24 3 1 #" "
0 0 14 3 15 #"yellowRectangle"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                             (("
0 0 14 3 6 #"Change"
0 0 24 3 1 #" "
0 0 14 3 5 #"image"
0 0 24 3 2 #" ("
0 0 14 3 7 #"overlay"
0 0 24 3 2 #" ("
0 0 14 3 6 #"circle"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 24 3 2 #") "
0 0 14 3 8 #"bballPic"
0 0 24 3 2 #") "
0 0 14 3 5 #"bball"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 6 #"Bounce"
0 0 24 3 1 #" "
0 0 14 3 5 #"bball"
0 0 24 3 1 #" "
0 0 14 3 15 #"yellowRectangle"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 2 #"If"
0 0 24 3 3 #" (("
0 0 14 3 9 #"Collision"
0 0 24 3 1 #" "
0 0 14 3 6 #"soccer"
0 0 24 3 1 #" "
0 0 14 3 14 #"greenRectangle"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                             (("
0 0 14 3 6 #"Change"
0 0 24 3 1 #" "
0 0 14 3 5 #"image"
0 0 24 3 2 #" ("
0 0 14 3 7 #"overlay"
0 0 24 3 2 #" ("
0 0 14 3 6 #"circle"
0 0 24 3 1 #" "
0 0 21 3 2 #"49"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 2 #") "
0 0 14 3 9 #"soccerPic"
0 0 24 3 2 #") "
0 0 14 3 6 #"soccer"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 6 #"Bounce"
0 0 24 3 1 #" "
0 0 14 3 6 #"soccer"
0 0 24 3 1 #" "
0 0 14 3 14 #"greenRectangle"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 2 #"If"
0 0 24 3 3 #" (("
0 0 14 3 9 #"Collision"
0 0 24 3 1 #" "
0 0 14 3 6 #"soccer"
0 0 24 3 1 #" "
0 0 14 3 5 #"bball"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                             (("
0 0 14 3 6 #"Change"
0 0 24 3 1 #" "
0 0 14 3 5 #"image"
0 0 24 3 2 #" ("
0 0 14 3 7 #"overlay"
0 0 24 3 2 #" ("
0 0 14 3 6 #"circle"
0 0 24 3 1 #" "
0 0 21 3 2 #"49"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"white\""
0 0 24 3 2 #") "
0 0 14 3 9 #"soccerPic"
0 0 24 3 2 #") "
0 0 14 3 6 #"soccer"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 6 #"Change"
0 0 24 3 1 #" "
0 0 14 3 5 #"image"
0 0 24 3 2 #" ("
0 0 14 3 7 #"overlay"
0 0 24 3 2 #" ("
0 0 14 3 6 #"circle"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"white\""
0 0 24 3 2 #") "
0 0 14 3 8 #"bballPic"
0 0 24 3 2 #") "
0 0 14 3 5 #"bball"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 6 #"Bounce"
0 0 24 3 1 #" "
0 0 14 3 6 #"soccer"
0 0 24 3 1 #" "
0 0 14 3 5 #"bball"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 5 #"Accel"
0 0 24 3 2 #" ("
0 0 21 3 3 #"0.2"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 14 3 6 #"soccer"
0 0 24 3 3 #") ("
0 0 14 3 5 #"Accel"
0 0 24 3 2 #" ("
0 0 21 3 4 #"-0.2"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 14 3 5 #"bball"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                   "
0 0 14 3 5 #"Until"
0 0 24 3 3 #" (("
0 0 14 3 9 #"Collision"
0 0 24 3 1 #" "
0 0 14 3 6 #"soccer"
0 0 24 3 1 #" "
0 0 14 3 15 #"yellowRectangle"
0 0 24 3 3 #") ("
0 0 14 3 9 #"Collision"
0 0 24 3 1 #" "
0 0 14 3 5 #"bball"
0 0 24 3 1 #" "
0 0 14 3 14 #"greenRectangle"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 2 #"If"
0 0 24 3 3 #" (("
0 0 14 3 9 #"Collision"
0 0 24 3 1 #" "
0 0 14 3 6 #"soccer"
0 0 24 3 1 #" "
0 0 14 3 15 #"yellowRectangle"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                      (("
0 0 14 3 6 #"Change"
0 0 24 3 1 #" "
0 0 14 3 5 #"image"
0 0 24 3 2 #" ("
0 0 14 3 7 #"overlay"
0 0 24 3 2 #" ("
0 0 14 3 6 #"circle"
0 0 24 3 1 #" "
0 0 21 3 2 #"49"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 24 3 2 #") "
0 0 14 3 9 #"soccerPic"
0 0 24 3 2 #") "
0 0 14 3 6 #"soccer"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 15 3 2 #"\316\273"
0 0 24 3 5 #" () ("
0 0 14 3 7 #"println"
0 0 24 3 1 #" "
0 0 19 3 21 #"\"The soccer ball won\""
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 2 #"If"
0 0 24 3 3 #" (("
0 0 14 3 9 #"Collision"
0 0 24 3 1 #" "
0 0 14 3 5 #"bball"
0 0 24 3 1 #" "
0 0 14 3 14 #"greenRectangle"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                      (("
0 0 14 3 6 #"Change"
0 0 24 3 1 #" "
0 0 14 3 5 #"image"
0 0 24 3 2 #" ("
0 0 14 3 7 #"overlay"
0 0 24 3 2 #" ("
0 0 14 3 6 #"circle"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 2 #") "
0 0 14 3 8 #"bballPic"
0 0 24 3 2 #") "
0 0 14 3 5 #"bball"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 15 3 2 #"\316\273"
0 0 24 3 5 #" () ("
0 0 14 3 7 #"println"
0 0 24 3 1 #" "
0 0 19 3 20 #"\"The basketball won\""
0 0 24 3 7 #"))))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 76
(
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;; INTERPRETER ;;;;;;;;;;;;;;;;;;;;;;;;;"
 #";;;;;;;;"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";;;;;;;;;; VARIABLES ;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";; A var is (make-var symbol graphic)"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 3 #"var"
0 0 24 3 2 #" ("
0 0 14 3 4 #"name"
0 0 24 3 1 #" "
0 0 14 3 3 #"val"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 26 #";; a list-of-var is either"
0 0 24 29 1 #"\n"
0 0 17 3 16 #";;   - empty, or"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";;   - (cons var list-of-var)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";; vars is a list-of-var"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"vars"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";; clear-vars : -> void"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";; empties the vars list"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"clear-vars"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 4 #"vars"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";; lookup-var : symbol -> graphic"
0 0 24 29 1 #"\n"
0 0 17 3 55 #";; produces graphic associated with given variable name"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"lookup-var"
0 0 24 3 1 #" "
0 0 14 3 7 #"varname"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 10 #"varstructs"
0 0 24 3 2 #" ("
0 0 14 3 6 #"filter"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 4 #"avar"
0 0 24 3 3 #") ("
0 0 14 3 8 #"symbol=?"
0 0 24 3 1 #" "
0 0 14 3 7 #"varname"
0 0 24 3 2 #" ("
0 0 14 3 8 #"var-name"
0 0 24 3 1 #" "
0 0 14 3 4 #"avar"
0 0 24 3 4 #"))) "
0 0 14 3 4 #"vars"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 5 #"cons?"
0 0 24 3 1 #" "
0 0 14 3 10 #"varstructs"
0 0 24 3 3 #") ("
0 0 14 3 7 #"var-val"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 10 #"varstructs"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 10 #"lookup-var"
0 0 24 3 2 #" ("
0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 8 #"variable"
0 0 19 3 16 #" ~a not defined\""
0 0 24 3 1 #" "
0 0 14 3 7 #"varname"
0 0 24 3 6 #"))])))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";; update-var : symbol graphic -> void"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";; change value of named var to given graphic"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"update-var"
0 0 24 3 1 #" "
0 0 14 3 7 #"varname"
0 0 24 3 1 #" "
0 0 14 3 6 #"newval"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 4 #"vars"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 4 #"avar"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 8 #"symbol=?"
0 0 24 3 1 #" "
0 0 14 3 7 #"varname"
0 0 24 3 2 #" ("
0 0 14 3 8 #"var-name"
0 0 24 3 1 #" "
0 0 14 3 4 #"avar"
0 0 24 3 4 #")) ("
0 0 14 3 8 #"make-var"
0 0 24 3 1 #" "
0 0 14 3 7 #"varname"
0 0 24 3 1 #" "
0 0 14 3 6 #"newval"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 4 #"avar"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 14 3 4 #"vars"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";;;;;;; ANIMATION LOGIC ;;;;;;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";; run-animation : animation -> void"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";; executes the commands in an animation"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"run-animation"
0 0 24 3 1 #" "
0 0 14 3 4 #"anim"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 10 #"clear-vars"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 15 #"insert-graphics"
0 0 24 3 2 #" ("
0 0 14 3 17 #"animation-objects"
0 0 24 3 1 #" "
0 0 14 3 4 #"anim"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 8 #"big-bang"
0 0 24 3 1 #" "
0 0 21 3 3 #"600"
0 0 24 3 1 #" "
0 0 21 3 3 #"400"
0 0 24 3 1 #" "
0 0 21 3 4 #"1/28"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 12 #"update-frame"
0 0 24 3 2 #" ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 21 3 3 #"600"
0 0 24 3 1 #" "
0 0 21 3 3 #"400"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"white\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 11 #"run-cmdlist"
0 0 24 3 2 #" ("
0 0 14 3 14 #"animation-cmds"
0 0 24 3 1 #" "
0 0 14 3 4 #"anim"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";; run-cmdlist : list-of-cmd -> void"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";; executes every command in a list"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"run-cmdlist"
0 0 24 3 1 #" "
0 0 14 3 7 #"cmd-lst"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 8 #"for-each"
0 0 24 3 1 #" "
0 0 14 3 7 #"run-cmd"
0 0 24 3 1 #" "
0 0 14 3 7 #"cmd-lst"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";; run-cmd : cmd -> void"
0 0 24 29 1 #"\n"
0 0 17 3 55 #";; executes the given command and draws the world after"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";;   every one except bounce then sleeps"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"run-cmd"
0 0 24 3 1 #" "
0 0 14 3 3 #"cmd"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 7 #"bounce?"
0 0 24 3 1 #" "
0 0 14 3 3 #"cmd"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 15 #"bounce-graphics"
0 0 24 3 2 #" ("
0 0 14 3 14 #"bounce-object1"
0 0 24 3 1 #" "
0 0 14 3 3 #"cmd"
0 0 24 3 3 #") ("
0 0 14 3 14 #"bounce-object2"
0 0 24 3 1 #" "
0 0 14 3 3 #"cmd"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 15 #"cmd-loop-until?"
0 0 24 3 1 #" "
0 0 14 3 3 #"cmd"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 5 #"until"
0 0 24 3 2 #" ("
0 0 14 3 20 #"cmd-loop-until-tests"
0 0 24 3 1 #" "
0 0 14 3 3 #"cmd"
0 0 24 3 3 #") ("
0 0 14 3 19 #"cmd-loop-until-cmds"
0 0 24 3 1 #" "
0 0 14 3 3 #"cmd"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"               [("
0 0 14 3 7 #"cmd-if?"
0 0 24 3 1 #" "
0 0 14 3 3 #"cmd"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 19 #"collision-in-conds?"
0 0 24 3 2 #" ("
0 0 14 3 12 #"cmd-if-tests"
0 0 24 3 1 #" "
0 0 14 3 3 #"cmd"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 11 #"run-cmdlist"
0 0 24 3 2 #" ("
0 0 14 3 11 #"cmd-if-cmds"
0 0 24 3 1 #" "
0 0 14 3 3 #"cmd"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 4 #"void"
0 0 24 3 4 #")])]"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"               [("
0 0 14 3 5 #"move?"
0 0 24 3 1 #" "
0 0 14 3 3 #"cmd"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 13 #"move-graphics"
0 0 24 3 2 #" ("
0 0 14 3 12 #"move-objects"
0 0 24 3 1 #" "
0 0 14 3 3 #"cmd"
0 0 24 3 3 #") ("
0 0 14 3 10 #"move-accel"
0 0 24 3 1 #" "
0 0 14 3 3 #"cmd"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"               [("
0 0 14 3 5 #"jump?"
0 0 24 3 1 #" "
0 0 14 3 3 #"cmd"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 13 #"jump-graphics"
0 0 24 3 2 #" ("
0 0 14 3 12 #"jump-objects"
0 0 24 3 1 #" "
0 0 14 3 3 #"cmd"
0 0 24 3 3 #") ("
0 0 14 3 10 #"jump-lower"
0 0 24 3 1 #" "
0 0 14 3 3 #"cmd"
0 0 24 3 3 #") ("
0 0 14 3 10 #"jump-upper"
0 0 24 3 1 #" "
0 0 14 3 3 #"cmd"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 11 #"sleep/yield"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.1"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"               [("
0 0 14 3 10 #"insertion?"
0 0 24 3 1 #" "
0 0 14 3 3 #"cmd"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 15 #"insert-graphics"
0 0 24 3 2 #" ("
0 0 14 3 17 #"insertion-objects"
0 0 24 3 1 #" "
0 0 14 3 3 #"cmd"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"               [("
0 0 14 3 8 #"removal?"
0 0 24 3 1 #" "
0 0 14 3 3 #"cmd"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 15 #"remove-graphics"
0 0 24 3 2 #" ("
0 0 14 3 15 #"removal-objects"
0 0 24 3 1 #" "
0 0 14 3 3 #"cmd"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"               [("
0 0 14 3 15 #"graphic-change?"
0 0 24 3 1 #" "
0 0 14 3 3 #"cmd"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 15 #"change-graphics"
0 0 24 3 2 #" ("
0 0 14 3 22 #"graphic-change-objects"
0 0 24 3 1 #" "
0 0 14 3 3 #"cmd"
0 0 24 3 3 #") ("
0 0 14 3 18 #"graphic-change-val"
0 0 24 3 1 #" "
0 0 14 3 3 #"cmd"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cmd"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 10 #"draw-world"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 11 #"sleep/yield"
0 0 24 3 1 #" "
0 0 21 3 6 #"0.0001"
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 53 #";; until : list-of-collision-cond list-of-cmd -> void"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";; runs the list of commands until any of the"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";;   collision conditions return true"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 5 #"until"
0 0 24 3 1 #" "
0 0 14 3 5 #"tests"
0 0 24 3 1 #" "
0 0 14 3 4 #"cmds"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 19 #"collision-in-conds?"
0 0 24 3 1 #" "
0 0 14 3 5 #"tests"
0 0 24 3 3 #") ("
0 0 14 3 4 #"void"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 11 #"run-cmdlist"
0 0 24 3 1 #" "
0 0 14 3 4 #"cmds"
0 0 24 3 3 #") ("
0 0 14 3 5 #"until"
0 0 24 3 1 #" "
0 0 14 3 5 #"tests"
0 0 24 3 1 #" "
0 0 14 3 4 #"cmds"
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";; move-graphics : list-of-symbol -> void"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";; consumes a list of variable names"
0 0 24 29 1 #"\n"
0 0 17 3 60
#";; changes the graphics to have new positions and velocities"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"move-graphics"
0 0 24 3 1 #" "
0 0 14 3 5 #"names"
0 0 24 3 1 #" "
0 0 14 3 5 #"accel"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 8 #"for-each"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 4 #"name"
0 0 24 3 3 #") ("
0 0 14 3 12 #"move-graphic"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 1 #" "
0 0 14 3 5 #"accel"
0 0 24 3 3 #")) "
0 0 14 3 5 #"names"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";; move-graphic : symbol -> void"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";; consumes a variable name"
0 0 24 29 1 #"\n"
0 0 17 3 58
#";; changes the graphic to have a new position and velocity"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"move-graphic"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 1 #" "
0 0 14 3 5 #"accel"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" [("
0 0 14 3 1 #"v"
0 0 24 3 2 #" ("
0 0 14 3 10 #"lookup-var"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 10 #"update-var"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 12 #"make-graphic"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 11 #"graphic-pic"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 9 #"make-posn"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 11 #"graphic-pos"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 4 #")) ("
0 0 14 3 10 #"velocity-x"
0 0 24 3 2 #" ("
0 0 14 3 11 #"graphic-vel"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 24 3 2 #" ("
0 0 14 3 11 #"graphic-pos"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 4 #")) ("
0 0 14 3 10 #"velocity-y"
0 0 24 3 2 #" ("
0 0 14 3 11 #"graphic-vel"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 13 #"make-velocity"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 10 #"velocity-x"
0 0 24 3 2 #" ("
0 0 14 3 11 #"graphic-vel"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 4 #")) ("
0 0 14 3 14 #"acceleration-x"
0 0 24 3 1 #" "
0 0 14 3 5 #"accel"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 10 #"velocity-y"
0 0 24 3 2 #" ("
0 0 14 3 11 #"graphic-vel"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 4 #")) ("
0 0 14 3 14 #"acceleration-y"
0 0 24 3 1 #" "
0 0 14 3 5 #"accel"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 13 #"graphic-shape"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 51 #";; jump-graphics : list-of-symbol posn posn -> void"
0 0 24 29 1 #"\n"
0 0 17 3 64
#";; consumes a list of variable names and a lower and upper bound"
0 0 24 29 1 #"\n"
0 0 17 3 66
#";; changes the graphics to have random positions within the bounds"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"jump-graphics"
0 0 24 3 1 #" "
0 0 14 3 5 #"names"
0 0 24 3 1 #" "
0 0 14 3 5 #"lower"
0 0 24 3 1 #" "
0 0 14 3 5 #"upper"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 8 #"for-each"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 4 #"name"
0 0 24 3 3 #") ("
0 0 14 3 12 #"jump-graphic"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 1 #" "
0 0 14 3 5 #"lower"
0 0 24 3 1 #" "
0 0 14 3 5 #"upper"
0 0 24 3 3 #")) "
0 0 14 3 5 #"names"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 42 #";; jump-graphic : symbol posn posn -> void"
0 0 24 29 1 #"\n"
0 0 17 3 55 #";; consumes a variable name and a lower and upper bound"
0 0 24 29 1 #"\n"
0 0 17 3 66
#";; changes the graphic to have a random position within the bounds"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"jump-graphic"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 1 #" "
0 0 14 3 5 #"lower"
0 0 24 3 1 #" "
0 0 14 3 5 #"upper"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" [("
0 0 14 3 1 #"v"
0 0 24 3 2 #" ("
0 0 14 3 10 #"lookup-var"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 10 #"update-var"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 12 #"make-graphic"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 11 #"graphic-pic"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 9 #"make-posn"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 6 #"random"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 1 #" "
0 0 14 3 5 #"upper"
0 0 24 3 3 #") ("
0 0 14 3 6 #"posn-x"
0 0 24 3 1 #" "
0 0 14 3 5 #"lower"
0 0 24 3 5 #"))) ("
0 0 14 3 6 #"posn-x"
0 0 24 3 1 #" "
0 0 14 3 5 #"lower"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 6 #"random"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 24 3 1 #" "
0 0 14 3 5 #"upper"
0 0 24 3 3 #") ("
0 0 14 3 6 #"posn-y"
0 0 24 3 1 #" "
0 0 14 3 5 #"lower"
0 0 24 3 5 #"))) ("
0 0 14 3 6 #"posn-y"
0 0 24 3 1 #" "
0 0 14 3 5 #"lower"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 11 #"graphic-vel"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 13 #"graphic-shape"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 47 #";; insert-graphics : list-of-vargraphic -> void"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";; consumes a list of graphic variables"
0 0 24 29 1 #"\n"
0 0 17 3 50 #";; inserts the graphics into the list of variables"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"insert-graphics"
0 0 24 3 1 #" "
0 0 14 3 7 #"objects"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 4 #"vars"
0 0 24 3 2 #" ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 4 #"vars"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 3 #"obj"
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-var"
0 0 24 3 2 #" ("
0 0 14 3 18 #"vargraphic-varname"
0 0 24 3 1 #" "
0 0 14 3 3 #"obj"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 51 #"                                                  ("
0 0 14 3 17 #"vargraphic-object"
0 0 24 3 1 #" "
0 0 14 3 3 #"obj"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                               "
0 0 14 3 7 #"objects"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 43 #";; remove-graphics : list-of-symbol -> void"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";; consumes a list of variable names"
0 0 24 29 1 #"\n"
0 0 17 3 50 #";; removes the graphics from the list of variables"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"remove-graphics"
0 0 24 3 1 #" "
0 0 14 3 5 #"names"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 4 #"vars"
0 0 24 3 2 #" ("
0 0 14 3 6 #"filter"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 5 #"a-var"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 6 #"member"
0 0 24 3 2 #" ("
0 0 14 3 8 #"var-name"
0 0 24 3 1 #" "
0 0 14 3 5 #"a-var"
0 0 24 3 2 #") "
0 0 14 3 5 #"names"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                     "
0 0 14 3 4 #"vars"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 42 #";; bounce-graphics : symbol symbol -> void"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";; consumes a list of graphic variables"
0 0 24 29 1 #"\n"
0 0 17 3 46 #";; changes the graphics to have new velocities"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"bounce-graphics"
0 0 24 3 1 #" "
0 0 14 3 5 #"name1"
0 0 24 3 1 #" "
0 0 14 3 5 #"name2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 8 #"symbol=?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"circle"
0 0 24 3 2 #" ("
0 0 14 3 13 #"graphic-shape"
0 0 24 3 2 #" ("
0 0 14 3 10 #"lookup-var"
0 0 24 3 1 #" "
0 0 14 3 5 #"name1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 8 #"symbol=?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"circle"
0 0 24 3 2 #" ("
0 0 14 3 13 #"graphic-shape"
0 0 24 3 2 #" ("
0 0 14 3 10 #"lookup-var"
0 0 24 3 1 #" "
0 0 14 3 5 #"name2"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 14 #"bounce-circles"
0 0 24 3 1 #" "
0 0 14 3 5 #"name1"
0 0 24 3 1 #" "
0 0 14 3 5 #"name2"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 12 #"bounce-rects"
0 0 24 3 1 #" "
0 0 14 3 5 #"name1"
0 0 24 3 1 #" "
0 0 14 3 5 #"name2"
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";; bounce-rects : symbol symbol -> void"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";; consumes two variable names"
0 0 24 29 1 #"\n"
0 0 17 3 77
(
 #";; changes their velocities to relfect the rectangles bouncing off e"
 #"ach other"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"bounce-rects"
0 0 24 3 1 #" "
0 0 14 3 5 #"name1"
0 0 24 3 1 #" "
0 0 14 3 5 #"name2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"update-vel"
0 0 24 3 1 #" "
0 0 14 3 5 #"name1"
0 0 24 3 2 #" ("
0 0 14 3 10 #"calc-rbvel"
0 0 24 3 1 #" "
0 0 14 3 5 #"name1"
0 0 24 3 1 #" "
0 0 14 3 5 #"name2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"update-vel"
0 0 24 3 1 #" "
0 0 14 3 5 #"name2"
0 0 24 3 2 #" ("
0 0 14 3 10 #"calc-rbvel"
0 0 24 3 1 #" "
0 0 14 3 5 #"name2"
0 0 24 3 1 #" "
0 0 14 3 5 #"name1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";; calc-rbvel : symbol symbol -> velocity"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";; consumes two variable names"
0 0 24 29 1 #"\n"
0 0 17 3 71
(
 #";; produces the velocity of the first rectangle bouncing off the sec"
 #"ond"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"calc-rbvel"
0 0 24 3 1 #" "
0 0 14 3 5 #"name1"
0 0 24 3 1 #" "
0 0 14 3 5 #"name2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" [("
0 0 14 3 4 #"var1"
0 0 24 3 2 #" ("
0 0 14 3 10 #"lookup-var"
0 0 24 3 1 #" "
0 0 14 3 5 #"name1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 4 #"var2"
0 0 24 3 2 #" ("
0 0 14 3 10 #"lookup-var"
0 0 24 3 1 #" "
0 0 14 3 5 #"name2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 2 #"vx"
0 0 24 3 2 #" ("
0 0 14 3 10 #"velocity-x"
0 0 24 3 2 #" ("
0 0 14 3 11 #"graphic-vel"
0 0 24 3 1 #" "
0 0 14 3 4 #"var1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 2 #"vy"
0 0 24 3 2 #" ("
0 0 14 3 10 #"velocity-y"
0 0 24 3 2 #" ("
0 0 14 3 11 #"graphic-vel"
0 0 24 3 1 #" "
0 0 14 3 4 #"var1"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 2 #"vx"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 2 #"vy"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 13 #"make-velocity"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 2 #"-1"
0 0 24 3 1 #" "
0 0 14 3 2 #"vx"
0 0 24 3 3 #") ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 2 #"-1"
0 0 24 3 1 #" "
0 0 14 3 2 #"vy"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" [("
0 0 14 3 2 #"x1"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 11 #"graphic-pos"
0 0 24 3 1 #" "
0 0 14 3 4 #"var1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 2 #"x2"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 11 #"graphic-pos"
0 0 24 3 1 #" "
0 0 14 3 4 #"var2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 2 #"y1"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 24 3 2 #" ("
0 0 14 3 11 #"graphic-pos"
0 0 24 3 1 #" "
0 0 14 3 4 #"var1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 2 #"y2"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 24 3 2 #" ("
0 0 14 3 11 #"graphic-pos"
0 0 24 3 1 #" "
0 0 14 3 4 #"var2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 2 #"w1"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 2 #" ("
0 0 14 3 11 #"image-width"
0 0 24 3 2 #" ("
0 0 14 3 11 #"graphic-pic"
0 0 24 3 1 #" "
0 0 14 3 4 #"var1"
0 0 24 3 3 #")) "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 2 #"w2"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 2 #" ("
0 0 14 3 11 #"image-width"
0 0 24 3 2 #" ("
0 0 14 3 11 #"graphic-pic"
0 0 24 3 1 #" "
0 0 14 3 4 #"var2"
0 0 24 3 3 #")) "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 2 #"h1"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 2 #" ("
0 0 14 3 12 #"image-height"
0 0 24 3 2 #" ("
0 0 14 3 11 #"graphic-pic"
0 0 24 3 1 #" "
0 0 14 3 4 #"var1"
0 0 24 3 3 #")) "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 2 #"h2"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 2 #" ("
0 0 14 3 12 #"image-height"
0 0 24 3 2 #" ("
0 0 14 3 11 #"graphic-pic"
0 0 24 3 1 #" "
0 0 14 3 4 #"var2"
0 0 24 3 3 #")) "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 1 #"a"
0 0 24 3 2 #" ("
0 0 14 3 3 #"sgn"
0 0 24 3 1 #" "
0 0 14 3 2 #"vy"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 1 #"b"
0 0 24 3 2 #" ("
0 0 14 3 3 #"sgn"
0 0 24 3 1 #" "
0 0 14 3 2 #"vx"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 17 3 44 #";; check if horizontal or vertical collision"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 2 #"y1"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 2 #"h1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 2 #"vy"
0 0 24 3 1 #" "
0 0 14 3 2 #"vx"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 2 #"x1"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #" "
0 0 14 3 2 #"w1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 2 #"x2"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 2 #"-1"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #" "
0 0 14 3 2 #"w2"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 2 #"y2"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 2 #"-1"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 2 #"h2"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 13 #"make-velocity"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 2 #"-1"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 2 #"vx"
0 0 24 3 3 #") ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 2 #"vy"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-velocity"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 2 #"vx"
0 0 24 3 3 #") ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 2 #"-1"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 2 #"vy"
0 0 24 3 9 #"))]))])))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 44 #";; update-vel : symbol number number -> void"
0 0 24 29 1 #"\n"
0 0 17 3 43 #";; consumes a variable name and two numbers"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";; changes the velocity of the graphic"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"update-vel"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 1 #" "
0 0 14 3 3 #"vel"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" [("
0 0 14 3 1 #"v"
0 0 24 3 2 #" ("
0 0 14 3 10 #"lookup-var"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 10 #"update-var"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 14 3 4 #"name"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-graphic"
0 0 24 3 2 #" ("
0 0 14 3 11 #"graphic-pic"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 3 #") ("
0 0 14 3 11 #"graphic-pos"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 2 #") "
0 0 14 3 3 #"vel"
0 0 24 3 2 #" ("
0 0 14 3 13 #"graphic-shape"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";; bounce-circles : symbol symbol -> void"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";; consumes two variable names"
0 0 24 29 1 #"\n"
0 0 17 3 74
(
 #";; changes their velocities to relfect the circles bouncing off each"
 #" other"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"bounce-circles"
0 0 24 3 1 #" "
0 0 14 3 5 #"name1"
0 0 24 3 1 #" "
0 0 14 3 5 #"name2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"update-vel"
0 0 24 3 1 #" "
0 0 14 3 5 #"name1"
0 0 24 3 2 #" ("
0 0 14 3 10 #"calc-cbvel"
0 0 24 3 1 #" "
0 0 14 3 5 #"name1"
0 0 24 3 1 #" "
0 0 14 3 5 #"name2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"update-vel"
0 0 24 3 1 #" "
0 0 14 3 5 #"name2"
0 0 24 3 2 #" ("
0 0 14 3 10 #"calc-cbvel"
0 0 24 3 1 #" "
0 0 14 3 5 #"name2"
0 0 24 3 1 #" "
0 0 14 3 5 #"name1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";; calc-cbvel : symbol symbol -> velocity"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";; consumes two variable names"
0 0 24 29 1 #"\n"
0 0 17 3 68
#";; produces the velocity of the first circle bouncing off the second"
0 0 24 29 1 #"\n"
0 0 17 3 76
(
 #";; I don't know how to calculate this so I'm just using a rectangula"
 #"r bounce"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"calc-cbvel"
0 0 24 3 1 #" "
0 0 14 3 5 #"name1"
0 0 24 3 1 #" "
0 0 14 3 5 #"name2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"calc-rbvel"
0 0 24 3 1 #" "
0 0 14 3 5 #"name1"
0 0 24 3 1 #" "
0 0 14 3 5 #"name2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 49 #";; change-graphics : list-of-symbol value -> void"
0 0 24 29 1 #"\n"
0 0 17 3 48 #";; consumes a list of variable names and a value"
0 0 24 29 1 #"\n"
0 0 17 3 63
#";; changes the variables to have the value in the correct field"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"change-graphics"
0 0 24 3 1 #" "
0 0 14 3 5 #"names"
0 0 24 3 1 #" "
0 0 14 3 3 #"val"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 8 #"for-each"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 4 #"name"
0 0 24 3 3 #") ("
0 0 14 3 14 #"change-graphic"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 1 #" "
0 0 14 3 3 #"val"
0 0 24 3 3 #")) "
0 0 14 3 5 #"names"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";; change-graphic : symbol value -> void"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";; consumes a variable name and a value"
0 0 24 29 1 #"\n"
0 0 17 3 62
#";; changes the variable to have the value in the correct field"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"change-graphic"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 1 #" "
0 0 14 3 3 #"val"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" [("
0 0 14 3 1 #"v"
0 0 24 3 2 #" ("
0 0 14 3 10 #"lookup-var"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 10 #"update-var"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 12 #"make-graphic"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"image?"
0 0 24 3 1 #" "
0 0 14 3 3 #"val"
0 0 24 3 2 #") "
0 0 14 3 3 #"val"
0 0 24 3 2 #" ("
0 0 14 3 11 #"graphic-pic"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"posn?"
0 0 24 3 1 #" "
0 0 14 3 3 #"val"
0 0 24 3 2 #") "
0 0 14 3 3 #"val"
0 0 24 3 2 #" ("
0 0 14 3 11 #"graphic-pos"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 9 #"velocity?"
0 0 24 3 1 #" "
0 0 14 3 3 #"val"
0 0 24 3 2 #") "
0 0 14 3 3 #"val"
0 0 24 3 2 #" ("
0 0 14 3 11 #"graphic-vel"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 7 #"symbol?"
0 0 24 3 1 #" "
0 0 14 3 3 #"val"
0 0 24 3 2 #") "
0 0 14 3 3 #"val"
0 0 24 3 2 #" ("
0 0 14 3 13 #"graphic-shape"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 58
#";; collision-in-conds? : list-of-collision-cond -> boolean"
0 0 24 29 1 #"\n"
0 0 17 3 57 #";; determines if any of the collision conditions are true"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 19 #"collision-in-conds?"
0 0 24 3 1 #" "
0 0 14 3 4 #"cols"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 5 #"ormap"
0 0 24 3 1 #" "
0 0 14 3 18 #"collision-in-cond?"
0 0 24 3 1 #" "
0 0 14 3 4 #"cols"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 49 #";; collision-in-cond? : collision-cond -> boolean"
0 0 24 29 1 #"\n"
0 0 17 3 48 #";; determines if the collision condition is true"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 18 #"collision-in-cond?"
0 0 24 3 1 #" "
0 0 14 3 3 #"col"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 15 #"collision-cond?"
0 0 24 3 1 #" "
0 0 14 3 3 #"col"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 5 #"ormap"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 6 #"object"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 18 #"collision-in-list?"
0 0 24 3 1 #" "
0 0 14 3 6 #"object"
0 0 24 3 2 #" ("
0 0 14 3 23 #"collision-cond-objects2"
0 0 24 3 1 #" "
0 0 14 3 3 #"col"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 23 #"collision-cond-objects1"
0 0 24 3 1 #" "
0 0 14 3 3 #"col"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 5 #"ormap"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 6 #"object"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 18 #"collision-in-list?"
0 0 24 3 1 #" "
0 0 14 3 6 #"object"
0 0 24 3 2 #" ("
0 0 14 3 23 #"collision-cond-objects1"
0 0 24 3 1 #" "
0 0 14 3 3 #"col"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 23 #"collision-cond-objects2"
0 0 24 3 1 #" "
0 0 14 3 3 #"col"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 20 #"edge-collision-cond?"
0 0 24 3 1 #" "
0 0 14 3 3 #"col"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 5 #"ormap"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 6 #"object"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 18 #"collision-w-edges?"
0 0 24 3 1 #" "
0 0 14 3 6 #"object"
0 0 24 3 2 #" ("
0 0 14 3 25 #"edge-collision-cond-sides"
0 0 24 3 1 #" "
0 0 14 3 3 #"col"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 27 #"edge-collision-cond-objects"
0 0 24 3 1 #" "
0 0 14 3 3 #"col"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 56 #";; collision-w-edges? : symbol list-of-symbol -> boolean"
0 0 24 29 1 #"\n"
0 0 17 3 69
(
 #";; determines if the graphic is colliding with any of the given edge"
 #"s"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 18 #"collision-w-edges?"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 1 #" "
0 0 14 3 5 #"edges"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 5 #"ormap"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 4 #"edge"
0 0 24 3 3 #") ("
0 0 14 3 17 #"collision-w-edge?"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 1 #" "
0 0 14 3 4 #"edge"
0 0 24 3 3 #")) "
0 0 14 3 5 #"edges"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 47 #";; collision-w-edge? : symbol symbol -> boolean"
0 0 24 29 1 #"\n"
0 0 17 3 55 #";; determines if the graphic is colliding with the edge"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 17 #"collision-w-edge?"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 1 #" "
0 0 14 3 4 #"edge"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" [("
0 0 14 3 1 #"x"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 11 #"graphic-pos"
0 0 24 3 2 #" ("
0 0 14 3 10 #"lookup-var"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 1 #"y"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 24 3 2 #" ("
0 0 14 3 11 #"graphic-pos"
0 0 24 3 2 #" ("
0 0 14 3 10 #"lookup-var"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 1 #"w"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 2 #" ("
0 0 14 3 11 #"image-width"
0 0 24 3 2 #" ("
0 0 14 3 11 #"graphic-pic"
0 0 24 3 2 #" ("
0 0 14 3 10 #"lookup-var"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 4 #"))) "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 1 #"h"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 2 #" ("
0 0 14 3 12 #"image-height"
0 0 24 3 2 #" ("
0 0 14 3 11 #"graphic-pic"
0 0 24 3 2 #" ("
0 0 14 3 10 #"lookup-var"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 4 #"))) "
0 0 21 3 1 #"2"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 8 #"symbol=?"
0 0 24 3 1 #" "
0 0 14 3 4 #"edge"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 3 #") ("
0 0 14 3 2 #"<="
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"          [("
0 0 14 3 8 #"symbol=?"
0 0 24 3 1 #" "
0 0 14 3 4 #"edge"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"right"
0 0 24 3 3 #") ("
0 0 14 3 2 #">="
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #") "
0 0 21 3 3 #"600"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"          [("
0 0 14 3 8 #"symbol=?"
0 0 24 3 1 #" "
0 0 14 3 4 #"edge"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"top"
0 0 24 3 3 #") ("
0 0 14 3 2 #"<="
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 1 #"h"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"          [("
0 0 14 3 8 #"symbol=?"
0 0 24 3 1 #" "
0 0 14 3 4 #"edge"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"bottom"
0 0 24 3 3 #") ("
0 0 14 3 2 #">="
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 1 #"h"
0 0 24 3 2 #") "
0 0 21 3 3 #"400"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 5 #"error"
0 0 24 3 2 #" ("
0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 4 #"Edge"
0 0 19 3 1 #" "
0 0 19 3 4 #"does"
0 0 19 3 15 #" not exist: ~a\""
0 0 24 3 1 #" "
0 0 14 3 4 #"edge"
0 0 24 3 6 #"))])))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 56 #";; collision-in-list? : symbol list-of-symbol -> boolean"
0 0 24 29 1 #"\n"
0 0 17 3 78
(
 #";; determines if there is a collision between one object and a list "
 #"of objects"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 18 #"collision-in-list?"
0 0 24 3 1 #" "
0 0 14 3 5 #"name1"
0 0 24 3 1 #" "
0 0 14 3 6 #"names2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 5 #"ormap"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 5 #"name2"
0 0 24 3 3 #") ("
0 0 14 3 10 #"collision?"
0 0 24 3 1 #" "
0 0 14 3 5 #"name2"
0 0 24 3 1 #" "
0 0 14 3 5 #"name1"
0 0 24 3 3 #")) "
0 0 14 3 6 #"names2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";; collision? : symbol symbol -> boolean"
0 0 24 29 1 #"\n"
0 0 17 3 43 #";; determines if the graphics are colliding"
0 0 24 29 1 #"\n"
0 0 17 3 55 #";; returns false if the two variable names are the same"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"collision?"
0 0 24 3 1 #" "
0 0 14 3 5 #"name1"
0 0 24 3 1 #" "
0 0 14 3 5 #"name2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 8 #"symbol=?"
0 0 24 3 1 #" "
0 0 14 3 5 #"name1"
0 0 24 3 1 #" "
0 0 14 3 5 #"name2"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 8 #"symbol=?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"circle"
0 0 24 3 2 #" ("
0 0 14 3 13 #"graphic-shape"
0 0 24 3 2 #" ("
0 0 14 3 10 #"lookup-var"
0 0 24 3 1 #" "
0 0 14 3 5 #"name1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 8 #"symbol=?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"circle"
0 0 24 3 2 #" ("
0 0 14 3 13 #"graphic-shape"
0 0 24 3 2 #" ("
0 0 14 3 10 #"lookup-var"
0 0 24 3 1 #" "
0 0 14 3 5 #"name2"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 17 #"circle-collision?"
0 0 24 3 1 #" "
0 0 14 3 5 #"name1"
0 0 24 3 1 #" "
0 0 14 3 5 #"name2"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 15 #"rect-collision?"
0 0 24 3 1 #" "
0 0 14 3 5 #"name1"
0 0 24 3 1 #" "
0 0 14 3 5 #"name2"
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";; rect-collision? : symbol symbol -> boolean"
0 0 24 29 1 #"\n"
0 0 17 3 49 #";; determines if the two rectangles are colliding"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"rect-collision?"
0 0 24 3 1 #" "
0 0 14 3 5 #"name1"
0 0 24 3 1 #" "
0 0 14 3 5 #"name2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" [("
0 0 14 3 2 #"x1"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 11 #"graphic-pos"
0 0 24 3 2 #" ("
0 0 14 3 10 #"lookup-var"
0 0 24 3 1 #" "
0 0 14 3 5 #"name1"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 2 #"x2"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 11 #"graphic-pos"
0 0 24 3 2 #" ("
0 0 14 3 10 #"lookup-var"
0 0 24 3 1 #" "
0 0 14 3 5 #"name2"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 2 #"y1"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 24 3 2 #" ("
0 0 14 3 11 #"graphic-pos"
0 0 24 3 2 #" ("
0 0 14 3 10 #"lookup-var"
0 0 24 3 1 #" "
0 0 14 3 5 #"name1"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 2 #"y2"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 24 3 2 #" ("
0 0 14 3 11 #"graphic-pos"
0 0 24 3 2 #" ("
0 0 14 3 10 #"lookup-var"
0 0 24 3 1 #" "
0 0 14 3 5 #"name2"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 2 #"w1"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 2 #" ("
0 0 14 3 11 #"image-width"
0 0 24 3 2 #" ("
0 0 14 3 11 #"graphic-pic"
0 0 24 3 2 #" ("
0 0 14 3 10 #"lookup-var"
0 0 24 3 1 #" "
0 0 14 3 5 #"name1"
0 0 24 3 4 #"))) "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 2 #"w2"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 2 #" ("
0 0 14 3 11 #"image-width"
0 0 24 3 2 #" ("
0 0 14 3 11 #"graphic-pic"
0 0 24 3 2 #" ("
0 0 14 3 10 #"lookup-var"
0 0 24 3 1 #" "
0 0 14 3 5 #"name2"
0 0 24 3 4 #"))) "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 2 #"h1"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 2 #" ("
0 0 14 3 12 #"image-height"
0 0 24 3 2 #" ("
0 0 14 3 11 #"graphic-pic"
0 0 24 3 2 #" ("
0 0 14 3 10 #"lookup-var"
0 0 24 3 1 #" "
0 0 14 3 5 #"name1"
0 0 24 3 4 #"))) "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 2 #"h2"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 2 #" ("
0 0 14 3 12 #"image-height"
0 0 24 3 2 #" ("
0 0 14 3 11 #"graphic-pic"
0 0 24 3 2 #" ("
0 0 14 3 10 #"lookup-var"
0 0 24 3 1 #" "
0 0 14 3 5 #"name2"
0 0 24 3 4 #"))) "
0 0 21 3 1 #"2"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 2 #"<="
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 2 #"x1"
0 0 24 3 1 #" "
0 0 14 3 2 #"w1"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 2 #"x2"
0 0 24 3 1 #" "
0 0 14 3 2 #"w2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 2 #">="
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 2 #"x1"
0 0 24 3 1 #" "
0 0 14 3 2 #"w1"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 2 #"x2"
0 0 24 3 1 #" "
0 0 14 3 2 #"w2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 2 #"<="
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 2 #"y1"
0 0 24 3 1 #" "
0 0 14 3 2 #"h1"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 2 #"y2"
0 0 24 3 1 #" "
0 0 14 3 2 #"h2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 2 #">="
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 2 #"y1"
0 0 24 3 1 #" "
0 0 14 3 2 #"h1"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 2 #"y2"
0 0 24 3 1 #" "
0 0 14 3 2 #"h2"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 47 #";; circle-collision? : symbol symbol -> boolean"
0 0 24 29 1 #"\n"
0 0 17 3 42 #";; determines if two circles are colliding"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 17 #"circle-collision?"
0 0 24 3 1 #" "
0 0 14 3 5 #"name1"
0 0 24 3 1 #" "
0 0 14 3 5 #"name2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" [("
0 0 14 3 2 #"x1"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 11 #"graphic-pos"
0 0 24 3 2 #" ("
0 0 14 3 10 #"lookup-var"
0 0 24 3 1 #" "
0 0 14 3 5 #"name1"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 2 #"x2"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 11 #"graphic-pos"
0 0 24 3 2 #" ("
0 0 14 3 10 #"lookup-var"
0 0 24 3 1 #" "
0 0 14 3 5 #"name2"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 2 #"y1"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 24 3 2 #" ("
0 0 14 3 11 #"graphic-pos"
0 0 24 3 2 #" ("
0 0 14 3 10 #"lookup-var"
0 0 24 3 1 #" "
0 0 14 3 5 #"name1"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 2 #"y2"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 24 3 2 #" ("
0 0 14 3 11 #"graphic-pos"
0 0 24 3 2 #" ("
0 0 14 3 10 #"lookup-var"
0 0 24 3 1 #" "
0 0 14 3 5 #"name2"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 2 #"r1"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 2 #" ("
0 0 14 3 11 #"image-width"
0 0 24 3 2 #" ("
0 0 14 3 11 #"graphic-pic"
0 0 24 3 2 #" ("
0 0 14 3 10 #"lookup-var"
0 0 24 3 1 #" "
0 0 14 3 5 #"name1"
0 0 24 3 4 #"))) "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 2 #"r2"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 2 #" ("
0 0 14 3 11 #"image-width"
0 0 24 3 2 #" ("
0 0 14 3 11 #"graphic-pic"
0 0 24 3 2 #" ("
0 0 14 3 10 #"lookup-var"
0 0 24 3 1 #" "
0 0 14 3 5 #"name2"
0 0 24 3 4 #"))) "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 2 #"dx"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 2 #"x1"
0 0 24 3 1 #" "
0 0 14 3 2 #"x2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 2 #"dy"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 2 #"y1"
0 0 24 3 1 #" "
0 0 14 3 2 #"y2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 2 #"tr"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 2 #"r1"
0 0 24 3 1 #" "
0 0 14 3 2 #"r2"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 2 #"<="
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 2 #"dx"
0 0 24 3 1 #" "
0 0 14 3 2 #"dx"
0 0 24 3 3 #") ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 2 #"dy"
0 0 24 3 1 #" "
0 0 14 3 2 #"dy"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 2 #"tr"
0 0 24 3 1 #" "
0 0 14 3 2 #"tr"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";;;;;; INTERFACE HELPERS ;;;;;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";; draw-world : -> void"
0 0 24 29 1 #"\n"
0 0 17 3 19 #";; draws the scene "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"draw-world"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"update-frame"
0 0 24 3 2 #" ("
0 0 14 3 13 #"draw-graphics"
0 0 24 3 1 #" "
0 0 14 3 4 #"vars"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";; draw-graphics : list-of-var -> scene"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";; consumes a list of variables"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";; produces an image of all the graphics"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"draw-graphics"
0 0 24 3 1 #" "
0 0 14 3 7 #"objects"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 7 #"objects"
0 0 24 3 3 #") ("
0 0 14 3 11 #"empty-scene"
0 0 24 3 1 #" "
0 0 21 3 3 #"600"
0 0 24 3 1 #" "
0 0 21 3 3 #"400"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 5 #"cons?"
0 0 24 3 1 #" "
0 0 14 3 7 #"objects"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 11 #"place-image"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 11 #"graphic-pic"
0 0 24 3 2 #" ("
0 0 14 3 7 #"var-val"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 7 #"objects"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 11 #"graphic-pos"
0 0 24 3 2 #" ("
0 0 14 3 7 #"var-val"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 7 #"objects"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 6 #"posn-y"
0 0 24 3 2 #" ("
0 0 14 3 11 #"graphic-pos"
0 0 24 3 2 #" ("
0 0 14 3 7 #"var-val"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 7 #"objects"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 13 #"draw-graphics"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 7 #"objects"
0 0 24 3 6 #")))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";;;;;;;;;; TEST CASES ;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 2 #" ("
0 0 14 3 3 #"Var"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 1 #"="
0 0 24 3 3 #" (("
0 0 14 3 6 #"Circle"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 14 3 3 #"red"
0 0 24 3 3 #") ("
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 3 #") ("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 2 #" ("
0 0 14 3 3 #"Var"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #" "
0 0 14 3 1 #"="
0 0 24 3 3 #" (("
0 0 14 3 6 #"Circle"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 14 3 4 #"blue"
0 0 24 3 3 #") ("
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 3 #") ("
0 0 21 3 2 #"-1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 2 #" ("
0 0 14 3 3 #"Var"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #" "
0 0 14 3 1 #"="
0 0 24 3 3 #" (("
0 0 14 3 9 #"Rectangle"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 14 3 5 #"green"
0 0 24 3 3 #") ("
0 0 21 3 3 #"300"
0 0 24 3 1 #" "
0 0 21 3 3 #"300"
0 0 24 3 3 #") ("
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"col1"
0 0 24 3 2 #" ("
0 0 14 3 9 #"Collision"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"col2"
0 0 24 3 2 #" ("
0 0 14 3 9 #"Collision"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"col3"
0 0 24 3 2 #" ("
0 0 14 3 9 #"Collision"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 15 #"insert-graphics"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 69
(
 #";; I cannot test functions that return defined structures because th"
 #"e"
) 0 0 24 29 1 #"\n"
0 0 17 3 69
(
 #";; check-expect function uses a comparison method that does not recu"
 #"r"
) 0 0 24 29 1 #"\n"
0 0 17 3 29 #";; through opaque structures."
0 0 24 29 1 #"\n"
0 0 17 3 63
#";; (check-expect/recur (calc-rbvel 'a 'b) (make-velocity -1 0))"
0 0 24 29 1 #"\n"
0 0 17 3 62
#";; (check-expect/recur (calc-rbvel 'b 'a) (make-velocity 1 0))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 19 #"collision-in-conds?"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 4 #"col1"
0 0 24 3 1 #" "
0 0 14 3 4 #"col2"
0 0 24 3 1 #" "
0 0 14 3 4 #"col3"
0 0 24 3 3 #")) "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 19 #"collision-in-conds?"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 4 #"col2"
0 0 24 3 1 #" "
0 0 14 3 4 #"col3"
0 0 24 3 3 #")) "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 10 #"clear-vars"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";; run an example"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 13 #"run-animation"
0 0 24 3 1 #" "
0 0 14 3 6 #"CUSTOM"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0           0
